// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s2clientprotocol/common.proto

/*
Package SC2APIProtocol is a generated protocol buffer package.

It is generated from these files:
	s2clientprotocol/common.proto
	s2clientprotocol/data.proto
	s2clientprotocol/debug.proto
	s2clientprotocol/error.proto
	s2clientprotocol/query.proto
	s2clientprotocol/raw.proto
	s2clientprotocol/sc2api.proto
	s2clientprotocol/score.proto
	s2clientprotocol/spatial.proto
	s2clientprotocol/ui.proto

It has these top-level messages:
	AvailableAbility
	ImageData
	PointI
	RectangleI
	Point2D
	Point
	Size2DI
	AbilityData
	DamageBonus
	Weapon
	UnitTypeData
	UpgradeData
	BuffData
	DebugCommand
	DebugDraw
	Line
	Color
	DebugText
	DebugLine
	DebugBox
	DebugSphere
	DebugCreateUnit
	DebugKillUnit
	DebugTestProcess
	DebugSetScore
	DebugEndGame
	DebugSetUnitValue
	DebugChat
	RequestQuery
	ResponseQuery
	RequestQueryPathing
	ResponseQueryPathing
	RequestQueryAvailableAbilities
	ResponseQueryAvailableAbilities
	RequestQueryBuildingPlacement
	ResponseQueryBuildingPlacement
	StartRaw
	ObservationRaw
	PowerSource
	PlayerRaw
	UnitOrder
	PassengerUnit
	Unit
	MapState
	ActionRaw
	ActionRawUnitCommand
	ActionRawCameraMove
	ActionRawToggleAutocast
	Event
	Request
	Response
	RequestCreateGame
	LocalMap
	ResponseCreateGame
	RequestJoinGame
	PortSet
	ResponseJoinGame
	RequestRestartGame
	ResponseRestartGame
	RequestStartReplay
	ResponseStartReplay
	RequestLeaveGame
	ResponseLeaveGame
	RequestQuickSave
	ResponseQuickSave
	RequestQuickLoad
	ResponseQuickLoad
	RequestQuit
	ResponseQuit
	RequestGameInfo
	ResponseGameInfo
	RequestObservation
	ResponseObservation
	ChatReceived
	RequestAction
	ResponseAction
	RequestStep
	ResponseStep
	RequestData
	ResponseData
	RequestSaveReplay
	ResponseSaveReplay
	RequestReplayInfo
	PlayerInfoExtra
	ResponseReplayInfo
	RequestAvailableMaps
	ResponseAvailableMaps
	RequestSaveMap
	ResponseSaveMap
	RequestPing
	ResponsePing
	RequestDebug
	ResponseDebug
	PlayerSetup
	SpatialCameraSetup
	InterfaceOptions
	PlayerInfo
	PlayerCommon
	Observation
	Action
	ActionChat
	ActionError
	PlayerResult
	Score
	CategoryScoreDetails
	VitalScoreDetails
	ScoreDetails
	ObservationFeatureLayer
	FeatureLayers
	FeatureLayersMinimap
	ObservationRender
	ActionSpatial
	ActionSpatialUnitCommand
	ActionSpatialCameraMove
	ActionSpatialUnitSelectionPoint
	ActionSpatialUnitSelectionRect
	ObservationUI
	ControlGroup
	UnitInfo
	SinglePanel
	MultiPanel
	CargoPanel
	ProductionPanel
	ActionUI
	ActionControlGroup
	ActionSelectArmy
	ActionSelectWarpGates
	ActionSelectLarva
	ActionSelectIdleWorker
	ActionMultiPanel
	ActionCargoPanelUnload
	ActionProductionPanelRemoveFromQueue
	ActionToggleAutocast
*/
package SC2APIProtocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AvailableAbility struct {
	AbilityId        *int32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	RequiresPoint    *bool  `protobuf:"varint,2,opt,name=requires_point,json=requiresPoint" json:"requires_point,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AvailableAbility) Reset()                    { *m = AvailableAbility{} }
func (m *AvailableAbility) String() string            { return proto.CompactTextString(m) }
func (*AvailableAbility) ProtoMessage()               {}
func (*AvailableAbility) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AvailableAbility) GetAbilityId() int32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *AvailableAbility) GetRequiresPoint() bool {
	if m != nil && m.RequiresPoint != nil {
		return *m.RequiresPoint
	}
	return false
}

type ImageData struct {
	BitsPerPixel     *int32   `protobuf:"varint,1,opt,name=bits_per_pixel,json=bitsPerPixel" json:"bits_per_pixel,omitempty"`
	Size             *Size2DI `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
	Data             []byte   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ImageData) Reset()                    { *m = ImageData{} }
func (m *ImageData) String() string            { return proto.CompactTextString(m) }
func (*ImageData) ProtoMessage()               {}
func (*ImageData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ImageData) GetBitsPerPixel() int32 {
	if m != nil && m.BitsPerPixel != nil {
		return *m.BitsPerPixel
	}
	return 0
}

func (m *ImageData) GetSize() *Size2DI {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *ImageData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Point on the screen/minimap (e.g., 0..64).
// Note: bottom left of the screen is 0, 0.
type PointI struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PointI) Reset()                    { *m = PointI{} }
func (m *PointI) String() string            { return proto.CompactTextString(m) }
func (*PointI) ProtoMessage()               {}
func (*PointI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PointI) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *PointI) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

// Screen space rectangular area.
type RectangleI struct {
	P0               *PointI `protobuf:"bytes,1,opt,name=p0" json:"p0,omitempty"`
	P1               *PointI `protobuf:"bytes,2,opt,name=p1" json:"p1,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RectangleI) Reset()                    { *m = RectangleI{} }
func (m *RectangleI) String() string            { return proto.CompactTextString(m) }
func (*RectangleI) ProtoMessage()               {}
func (*RectangleI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RectangleI) GetP0() *PointI {
	if m != nil {
		return m.P0
	}
	return nil
}

func (m *RectangleI) GetP1() *PointI {
	if m != nil {
		return m.P1
	}
	return nil
}

// Point on the game board, 0..255.
// Note: bottom left of the screen is 0, 0.
type Point2D struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Point2D) Reset()                    { *m = Point2D{} }
func (m *Point2D) String() string            { return proto.CompactTextString(m) }
func (*Point2D) ProtoMessage()               {}
func (*Point2D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Point2D) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Point2D) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

// Point on the game board, 0..255.
// Note: bottom left of the screen is 0, 0.
type Point struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Point) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Point) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Point) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

// Screen dimensions.
type Size2DI struct {
	X                *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Size2DI) Reset()                    { *m = Size2DI{} }
func (m *Size2DI) String() string            { return proto.CompactTextString(m) }
func (*Size2DI) ProtoMessage()               {}
func (*Size2DI) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Size2DI) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Size2DI) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*AvailableAbility)(nil), "SC2APIProtocol.AvailableAbility")
	proto.RegisterType((*ImageData)(nil), "SC2APIProtocol.ImageData")
	proto.RegisterType((*PointI)(nil), "SC2APIProtocol.PointI")
	proto.RegisterType((*RectangleI)(nil), "SC2APIProtocol.RectangleI")
	proto.RegisterType((*Point2D)(nil), "SC2APIProtocol.Point2D")
	proto.RegisterType((*Point)(nil), "SC2APIProtocol.Point")
	proto.RegisterType((*Size2DI)(nil), "SC2APIProtocol.Size2DI")
}

func init() { proto.RegisterFile("s2clientprotocol/common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x6b, 0x02, 0x31,
	0x10, 0x85, 0xc9, 0x56, 0xdb, 0x3a, 0x5a, 0x29, 0x39, 0xb4, 0x5e, 0x04, 0x59, 0xb4, 0x08, 0x05,
	0xab, 0xfb, 0x0f, 0xa4, 0x5e, 0x72, 0x5b, 0xe2, 0xa5, 0x87, 0xc2, 0x12, 0xd7, 0x41, 0x02, 0x71,
	0x93, 0x66, 0xd3, 0xa2, 0xfb, 0xeb, 0x4b, 0x62, 0x4a, 0xb1, 0x50, 0x6f, 0xf3, 0x5e, 0x3e, 0xde,
	0xbc, 0x09, 0x0c, 0xeb, 0xac, 0x54, 0x12, 0x2b, 0x67, 0xac, 0x76, 0xba, 0xd4, 0xea, 0xa5, 0xd4,
	0xfb, 0xbd, 0xae, 0x66, 0x41, 0xd3, 0xfe, 0xfa, 0x35, 0x5b, 0xe6, 0x2c, 0x8f, 0x8f, 0xe9, 0x1b,
	0xdc, 0x2f, 0xbf, 0x84, 0x54, 0x62, 0xa3, 0x70, 0xb9, 0x91, 0x4a, 0xba, 0x23, 0x1d, 0x02, 0x88,
	0xd3, 0x58, 0xc8, 0xed, 0x80, 0x8c, 0xc8, 0xb4, 0xcd, 0x3b, 0xd1, 0x61, 0x5b, 0x3a, 0x81, 0xbe,
	0xc5, 0x8f, 0x4f, 0x69, 0xb1, 0x2e, 0x8c, 0x96, 0x95, 0x1b, 0x24, 0x23, 0x32, 0xbd, 0xe5, 0x77,
	0x3f, 0x6e, 0xee, 0xcd, 0xd4, 0x42, 0x87, 0xed, 0xc5, 0x0e, 0x57, 0xc2, 0x09, 0x3a, 0x86, 0xfe,
	0x46, 0xba, 0xba, 0x30, 0x68, 0x0b, 0x23, 0x0f, 0xa8, 0x62, 0x6c, 0xcf, 0xbb, 0x39, 0xda, 0xdc,
	0x7b, 0xf4, 0x19, 0x5a, 0xb5, 0x6c, 0x30, 0xe4, 0x75, 0xb3, 0xc7, 0xd9, 0x79, 0xd7, 0xd9, 0x5a,
	0x36, 0x98, 0xad, 0x18, 0x0f, 0x10, 0xa5, 0xd0, 0xda, 0x0a, 0x27, 0x06, 0x57, 0x23, 0x32, 0xed,
	0xf1, 0x30, 0xa7, 0x63, 0xb8, 0x0e, 0xcb, 0x19, 0xed, 0x01, 0x39, 0xc4, 0x1d, 0xe4, 0xe0, 0xd5,
	0x31, 0xa4, 0xb6, 0x39, 0x39, 0xa6, 0xef, 0x00, 0x1c, 0x4b, 0x27, 0xaa, 0x9d, 0x42, 0x46, 0x9f,
	0x20, 0x31, 0xf3, 0x80, 0x76, 0xb3, 0x87, 0xbf, 0x2b, 0x4f, 0x69, 0x3c, 0x31, 0xf3, 0xc0, 0x2d,
	0x62, 0xb5, 0xff, 0xb9, 0x45, 0x3a, 0x81, 0x9b, 0xa0, 0xb2, 0xd5, 0x6f, 0x89, 0xe4, 0xac, 0x44,
	0xe2, 0x4b, 0x2c, 0xa0, 0x1d, 0xb0, 0x4b, 0x90, 0x57, 0x4d, 0x38, 0x30, 0xe1, 0xa4, 0xf1, 0xc9,
	0xf1, 0x0b, 0x2e, 0x9d, 0xf7, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x34, 0xcf, 0xdd, 0x02, 0x02,
	0x00, 0x00,
}
