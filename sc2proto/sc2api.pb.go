// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s2clientprotocol/sc2api.proto

package SC2APIProtocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Status int32

const (
	Status_launched  Status = 1
	Status_init_game Status = 2
	Status_in_game   Status = 3
	Status_in_replay Status = 4
	Status_ended     Status = 5
	Status_quit      Status = 6
	Status_unknown   Status = 99
)

var Status_name = map[int32]string{
	1:  "launched",
	2:  "init_game",
	3:  "in_game",
	4:  "in_replay",
	5:  "ended",
	6:  "quit",
	99: "unknown",
}
var Status_value = map[string]int32{
	"launched":  1,
	"init_game": 2,
	"in_game":   3,
	"in_replay": 4,
	"ended":     5,
	"quit":      6,
	"unknown":   99,
}

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}
func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (x *Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Status_value, data, "Status")
	if err != nil {
		return err
	}
	*x = Status(value)
	return nil
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type Difficulty int32

const (
	Difficulty_VeryEasy    Difficulty = 1
	Difficulty_Easy        Difficulty = 2
	Difficulty_Medium      Difficulty = 3
	Difficulty_MediumHard  Difficulty = 4
	Difficulty_Hard        Difficulty = 5
	Difficulty_Harder      Difficulty = 6
	Difficulty_VeryHard    Difficulty = 7
	Difficulty_CheatVision Difficulty = 8
	Difficulty_CheatMoney  Difficulty = 9
	Difficulty_CheatInsane Difficulty = 10
)

var Difficulty_name = map[int32]string{
	1:  "VeryEasy",
	2:  "Easy",
	3:  "Medium",
	4:  "MediumHard",
	5:  "Hard",
	6:  "Harder",
	7:  "VeryHard",
	8:  "CheatVision",
	9:  "CheatMoney",
	10: "CheatInsane",
}
var Difficulty_value = map[string]int32{
	"VeryEasy":    1,
	"Easy":        2,
	"Medium":      3,
	"MediumHard":  4,
	"Hard":        5,
	"Harder":      6,
	"VeryHard":    7,
	"CheatVision": 8,
	"CheatMoney":  9,
	"CheatInsane": 10,
}

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}
func (x Difficulty) String() string {
	return proto.EnumName(Difficulty_name, int32(x))
}
func (x *Difficulty) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Difficulty_value, data, "Difficulty")
	if err != nil {
		return err
	}
	*x = Difficulty(value)
	return nil
}
func (Difficulty) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type PlayerType int32

const (
	PlayerType_Participant PlayerType = 1
	PlayerType_Computer    PlayerType = 2
	PlayerType_Observer    PlayerType = 3
)

var PlayerType_name = map[int32]string{
	1: "Participant",
	2: "Computer",
	3: "Observer",
}
var PlayerType_value = map[string]int32{
	"Participant": 1,
	"Computer":    2,
	"Observer":    3,
}

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}
func (x PlayerType) String() string {
	return proto.EnumName(PlayerType_name, int32(x))
}
func (x *PlayerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerType_value, data, "PlayerType")
	if err != nil {
		return err
	}
	*x = PlayerType(value)
	return nil
}
func (PlayerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

type Alert int32

const (
	Alert_NuclearLaunchDetected Alert = 1
	Alert_NydusWormDetected     Alert = 2
)

var Alert_name = map[int32]string{
	1: "NuclearLaunchDetected",
	2: "NydusWormDetected",
}
var Alert_value = map[string]int32{
	"NuclearLaunchDetected": 1,
	"NydusWormDetected":     2,
}

func (x Alert) Enum() *Alert {
	p := new(Alert)
	*p = x
	return p
}
func (x Alert) String() string {
	return proto.EnumName(Alert_name, int32(x))
}
func (x *Alert) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Alert_value, data, "Alert")
	if err != nil {
		return err
	}
	*x = Alert(value)
	return nil
}
func (Alert) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

type Result int32

const (
	Result_Victory   Result = 1
	Result_Defeat    Result = 2
	Result_Tie       Result = 3
	Result_Undecided Result = 4
)

var Result_name = map[int32]string{
	1: "Victory",
	2: "Defeat",
	3: "Tie",
	4: "Undecided",
}
var Result_value = map[string]int32{
	"Victory":   1,
	"Defeat":    2,
	"Tie":       3,
	"Undecided": 4,
}

func (x Result) Enum() *Result {
	p := new(Result)
	*p = x
	return p
}
func (x Result) String() string {
	return proto.EnumName(Result_name, int32(x))
}
func (x *Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Result_value, data, "Result")
	if err != nil {
		return err
	}
	*x = Result(value)
	return nil
}
func (Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

type ResponseCreateGame_Error int32

const (
	ResponseCreateGame_MissingMap             ResponseCreateGame_Error = 1
	ResponseCreateGame_InvalidMapPath         ResponseCreateGame_Error = 2
	ResponseCreateGame_InvalidMapData         ResponseCreateGame_Error = 3
	ResponseCreateGame_InvalidMapName         ResponseCreateGame_Error = 4
	ResponseCreateGame_InvalidMapHandle       ResponseCreateGame_Error = 5
	ResponseCreateGame_MissingPlayerSetup     ResponseCreateGame_Error = 6
	ResponseCreateGame_InvalidPlayerSetup     ResponseCreateGame_Error = 7
	ResponseCreateGame_MultiplayerUnsupported ResponseCreateGame_Error = 8
)

var ResponseCreateGame_Error_name = map[int32]string{
	1: "MissingMap",
	2: "InvalidMapPath",
	3: "InvalidMapData",
	4: "InvalidMapName",
	5: "InvalidMapHandle",
	6: "MissingPlayerSetup",
	7: "InvalidPlayerSetup",
	8: "MultiplayerUnsupported",
}
var ResponseCreateGame_Error_value = map[string]int32{
	"MissingMap":             1,
	"InvalidMapPath":         2,
	"InvalidMapData":         3,
	"InvalidMapName":         4,
	"InvalidMapHandle":       5,
	"MissingPlayerSetup":     6,
	"InvalidPlayerSetup":     7,
	"MultiplayerUnsupported": 8,
}

func (x ResponseCreateGame_Error) Enum() *ResponseCreateGame_Error {
	p := new(ResponseCreateGame_Error)
	*p = x
	return p
}
func (x ResponseCreateGame_Error) String() string {
	return proto.EnumName(ResponseCreateGame_Error_name, int32(x))
}
func (x *ResponseCreateGame_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseCreateGame_Error_value, data, "ResponseCreateGame_Error")
	if err != nil {
		return err
	}
	*x = ResponseCreateGame_Error(value)
	return nil
}
func (ResponseCreateGame_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{4, 0} }

type ResponseJoinGame_Error int32

const (
	ResponseJoinGame_MissingParticipation    ResponseJoinGame_Error = 1
	ResponseJoinGame_InvalidObservedPlayerId ResponseJoinGame_Error = 2
	ResponseJoinGame_MissingOptions          ResponseJoinGame_Error = 3
	ResponseJoinGame_MissingPorts            ResponseJoinGame_Error = 4
	ResponseJoinGame_GameFull                ResponseJoinGame_Error = 5
	ResponseJoinGame_LaunchError             ResponseJoinGame_Error = 6
	// Multiplayer specific.
	ResponseJoinGame_FeatureUnsupported ResponseJoinGame_Error = 7
	ResponseJoinGame_NoSpaceForUser     ResponseJoinGame_Error = 8
	ResponseJoinGame_MapDoesNotExist    ResponseJoinGame_Error = 9
	ResponseJoinGame_CannotOpenMap      ResponseJoinGame_Error = 10
	ResponseJoinGame_ChecksumError      ResponseJoinGame_Error = 11
	ResponseJoinGame_NetworkError       ResponseJoinGame_Error = 12
	ResponseJoinGame_OtherError         ResponseJoinGame_Error = 13
)

var ResponseJoinGame_Error_name = map[int32]string{
	1:  "MissingParticipation",
	2:  "InvalidObservedPlayerId",
	3:  "MissingOptions",
	4:  "MissingPorts",
	5:  "GameFull",
	6:  "LaunchError",
	7:  "FeatureUnsupported",
	8:  "NoSpaceForUser",
	9:  "MapDoesNotExist",
	10: "CannotOpenMap",
	11: "ChecksumError",
	12: "NetworkError",
	13: "OtherError",
}
var ResponseJoinGame_Error_value = map[string]int32{
	"MissingParticipation":    1,
	"InvalidObservedPlayerId": 2,
	"MissingOptions":          3,
	"MissingPorts":            4,
	"GameFull":                5,
	"LaunchError":             6,
	"FeatureUnsupported":      7,
	"NoSpaceForUser":          8,
	"MapDoesNotExist":         9,
	"CannotOpenMap":           10,
	"ChecksumError":           11,
	"NetworkError":            12,
	"OtherError":              13,
}

func (x ResponseJoinGame_Error) Enum() *ResponseJoinGame_Error {
	p := new(ResponseJoinGame_Error)
	*p = x
	return p
}
func (x ResponseJoinGame_Error) String() string {
	return proto.EnumName(ResponseJoinGame_Error_name, int32(x))
}
func (x *ResponseJoinGame_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseJoinGame_Error_value, data, "ResponseJoinGame_Error")
	if err != nil {
		return err
	}
	*x = ResponseJoinGame_Error(value)
	return nil
}
func (ResponseJoinGame_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{7, 0} }

type ResponseRestartGame_Error int32

const (
	ResponseRestartGame_LaunchError ResponseRestartGame_Error = 1
)

var ResponseRestartGame_Error_name = map[int32]string{
	1: "LaunchError",
}
var ResponseRestartGame_Error_value = map[string]int32{
	"LaunchError": 1,
}

func (x ResponseRestartGame_Error) Enum() *ResponseRestartGame_Error {
	p := new(ResponseRestartGame_Error)
	*p = x
	return p
}
func (x ResponseRestartGame_Error) String() string {
	return proto.EnumName(ResponseRestartGame_Error_name, int32(x))
}
func (x *ResponseRestartGame_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseRestartGame_Error_value, data, "ResponseRestartGame_Error")
	if err != nil {
		return err
	}
	*x = ResponseRestartGame_Error(value)
	return nil
}
func (ResponseRestartGame_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{9, 0} }

type ResponseStartReplay_Error int32

const (
	ResponseStartReplay_MissingReplay           ResponseStartReplay_Error = 1
	ResponseStartReplay_InvalidReplayPath       ResponseStartReplay_Error = 2
	ResponseStartReplay_InvalidReplayData       ResponseStartReplay_Error = 3
	ResponseStartReplay_InvalidMapData          ResponseStartReplay_Error = 4
	ResponseStartReplay_InvalidObservedPlayerId ResponseStartReplay_Error = 5
	ResponseStartReplay_MissingOptions          ResponseStartReplay_Error = 6
	ResponseStartReplay_LaunchError             ResponseStartReplay_Error = 7
)

var ResponseStartReplay_Error_name = map[int32]string{
	1: "MissingReplay",
	2: "InvalidReplayPath",
	3: "InvalidReplayData",
	4: "InvalidMapData",
	5: "InvalidObservedPlayerId",
	6: "MissingOptions",
	7: "LaunchError",
}
var ResponseStartReplay_Error_value = map[string]int32{
	"MissingReplay":           1,
	"InvalidReplayPath":       2,
	"InvalidReplayData":       3,
	"InvalidMapData":          4,
	"InvalidObservedPlayerId": 5,
	"MissingOptions":          6,
	"LaunchError":             7,
}

func (x ResponseStartReplay_Error) Enum() *ResponseStartReplay_Error {
	p := new(ResponseStartReplay_Error)
	*p = x
	return p
}
func (x ResponseStartReplay_Error) String() string {
	return proto.EnumName(ResponseStartReplay_Error_name, int32(x))
}
func (x *ResponseStartReplay_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseStartReplay_Error_value, data, "ResponseStartReplay_Error")
	if err != nil {
		return err
	}
	*x = ResponseStartReplay_Error(value)
	return nil
}
func (ResponseStartReplay_Error) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{11, 0}
}

type ResponseReplayInfo_Error int32

const (
	ResponseReplayInfo_MissingReplay     ResponseReplayInfo_Error = 1
	ResponseReplayInfo_InvalidReplayPath ResponseReplayInfo_Error = 2
	ResponseReplayInfo_InvalidReplayData ResponseReplayInfo_Error = 3
	ResponseReplayInfo_ParsingError      ResponseReplayInfo_Error = 4
	ResponseReplayInfo_DownloadError     ResponseReplayInfo_Error = 5
)

var ResponseReplayInfo_Error_name = map[int32]string{
	1: "MissingReplay",
	2: "InvalidReplayPath",
	3: "InvalidReplayData",
	4: "ParsingError",
	5: "DownloadError",
}
var ResponseReplayInfo_Error_value = map[string]int32{
	"MissingReplay":     1,
	"InvalidReplayPath": 2,
	"InvalidReplayData": 3,
	"ParsingError":      4,
	"DownloadError":     5,
}

func (x ResponseReplayInfo_Error) Enum() *ResponseReplayInfo_Error {
	p := new(ResponseReplayInfo_Error)
	*p = x
	return p
}
func (x ResponseReplayInfo_Error) String() string {
	return proto.EnumName(ResponseReplayInfo_Error_name, int32(x))
}
func (x *ResponseReplayInfo_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseReplayInfo_Error_value, data, "ResponseReplayInfo_Error")
	if err != nil {
		return err
	}
	*x = ResponseReplayInfo_Error(value)
	return nil
}
func (ResponseReplayInfo_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{35, 0} }

type ResponseSaveMap_Error int32

const (
	ResponseSaveMap_InvalidMapData ResponseSaveMap_Error = 1
)

var ResponseSaveMap_Error_name = map[int32]string{
	1: "InvalidMapData",
}
var ResponseSaveMap_Error_value = map[string]int32{
	"InvalidMapData": 1,
}

func (x ResponseSaveMap_Error) Enum() *ResponseSaveMap_Error {
	p := new(ResponseSaveMap_Error)
	*p = x
	return p
}
func (x ResponseSaveMap_Error) String() string {
	return proto.EnumName(ResponseSaveMap_Error_name, int32(x))
}
func (x *ResponseSaveMap_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseSaveMap_Error_value, data, "ResponseSaveMap_Error")
	if err != nil {
		return err
	}
	*x = ResponseSaveMap_Error(value)
	return nil
}
func (ResponseSaveMap_Error) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{39, 0} }

type ActionChat_Channel int32

const (
	ActionChat_Broadcast ActionChat_Channel = 1
	ActionChat_Team      ActionChat_Channel = 2
)

var ActionChat_Channel_name = map[int32]string{
	1: "Broadcast",
	2: "Team",
}
var ActionChat_Channel_value = map[string]int32{
	"Broadcast": 1,
	"Team":      2,
}

func (x ActionChat_Channel) Enum() *ActionChat_Channel {
	p := new(ActionChat_Channel)
	*p = x
	return p
}
func (x ActionChat_Channel) String() string {
	return proto.EnumName(ActionChat_Channel_name, int32(x))
}
func (x *ActionChat_Channel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionChat_Channel_value, data, "ActionChat_Channel")
	if err != nil {
		return err
	}
	*x = ActionChat_Channel(value)
	return nil
}
func (ActionChat_Channel) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{51, 0} }

type Request struct {
	// Types that are valid to be assigned to Request:
	//	*Request_CreateGame
	//	*Request_JoinGame
	//	*Request_RestartGame
	//	*Request_StartReplay
	//	*Request_LeaveGame
	//	*Request_QuickSave
	//	*Request_QuickLoad
	//	*Request_Quit
	//	*Request_GameInfo
	//	*Request_Observation
	//	*Request_Action
	//	*Request_Step
	//	*Request_Data
	//	*Request_Query
	//	*Request_SaveReplay
	//	*Request_ReplayInfo
	//	*Request_AvailableMaps
	//	*Request_SaveMap
	//	*Request_Ping
	//	*Request_Debug
	Request          isRequest_Request `protobuf_oneof:"request"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type isRequest_Request interface {
	isRequest_Request()
}

type Request_CreateGame struct {
	CreateGame *RequestCreateGame `protobuf:"bytes,1,opt,name=create_game,json=createGame,oneof"`
}
type Request_JoinGame struct {
	JoinGame *RequestJoinGame `protobuf:"bytes,2,opt,name=join_game,json=joinGame,oneof"`
}
type Request_RestartGame struct {
	RestartGame *RequestRestartGame `protobuf:"bytes,3,opt,name=restart_game,json=restartGame,oneof"`
}
type Request_StartReplay struct {
	StartReplay *RequestStartReplay `protobuf:"bytes,4,opt,name=start_replay,json=startReplay,oneof"`
}
type Request_LeaveGame struct {
	LeaveGame *RequestLeaveGame `protobuf:"bytes,5,opt,name=leave_game,json=leaveGame,oneof"`
}
type Request_QuickSave struct {
	QuickSave *RequestQuickSave `protobuf:"bytes,6,opt,name=quick_save,json=quickSave,oneof"`
}
type Request_QuickLoad struct {
	QuickLoad *RequestQuickLoad `protobuf:"bytes,7,opt,name=quick_load,json=quickLoad,oneof"`
}
type Request_Quit struct {
	Quit *RequestQuit `protobuf:"bytes,8,opt,name=quit,oneof"`
}
type Request_GameInfo struct {
	GameInfo *RequestGameInfo `protobuf:"bytes,9,opt,name=game_info,json=gameInfo,oneof"`
}
type Request_Observation struct {
	Observation *RequestObservation `protobuf:"bytes,10,opt,name=observation,oneof"`
}
type Request_Action struct {
	Action *RequestAction `protobuf:"bytes,11,opt,name=action,oneof"`
}
type Request_Step struct {
	Step *RequestStep `protobuf:"bytes,12,opt,name=step,oneof"`
}
type Request_Data struct {
	Data *RequestData `protobuf:"bytes,13,opt,name=data,oneof"`
}
type Request_Query struct {
	Query *RequestQuery `protobuf:"bytes,14,opt,name=query,oneof"`
}
type Request_SaveReplay struct {
	SaveReplay *RequestSaveReplay `protobuf:"bytes,15,opt,name=save_replay,json=saveReplay,oneof"`
}
type Request_ReplayInfo struct {
	ReplayInfo *RequestReplayInfo `protobuf:"bytes,16,opt,name=replay_info,json=replayInfo,oneof"`
}
type Request_AvailableMaps struct {
	AvailableMaps *RequestAvailableMaps `protobuf:"bytes,17,opt,name=available_maps,json=availableMaps,oneof"`
}
type Request_SaveMap struct {
	SaveMap *RequestSaveMap `protobuf:"bytes,18,opt,name=save_map,json=saveMap,oneof"`
}
type Request_Ping struct {
	Ping *RequestPing `protobuf:"bytes,19,opt,name=ping,oneof"`
}
type Request_Debug struct {
	Debug *RequestDebug `protobuf:"bytes,20,opt,name=debug,oneof"`
}

func (*Request_CreateGame) isRequest_Request()    {}
func (*Request_JoinGame) isRequest_Request()      {}
func (*Request_RestartGame) isRequest_Request()   {}
func (*Request_StartReplay) isRequest_Request()   {}
func (*Request_LeaveGame) isRequest_Request()     {}
func (*Request_QuickSave) isRequest_Request()     {}
func (*Request_QuickLoad) isRequest_Request()     {}
func (*Request_Quit) isRequest_Request()          {}
func (*Request_GameInfo) isRequest_Request()      {}
func (*Request_Observation) isRequest_Request()   {}
func (*Request_Action) isRequest_Request()        {}
func (*Request_Step) isRequest_Request()          {}
func (*Request_Data) isRequest_Request()          {}
func (*Request_Query) isRequest_Request()         {}
func (*Request_SaveReplay) isRequest_Request()    {}
func (*Request_ReplayInfo) isRequest_Request()    {}
func (*Request_AvailableMaps) isRequest_Request() {}
func (*Request_SaveMap) isRequest_Request()       {}
func (*Request_Ping) isRequest_Request()          {}
func (*Request_Debug) isRequest_Request()         {}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Request) GetCreateGame() *RequestCreateGame {
	if x, ok := m.GetRequest().(*Request_CreateGame); ok {
		return x.CreateGame
	}
	return nil
}

func (m *Request) GetJoinGame() *RequestJoinGame {
	if x, ok := m.GetRequest().(*Request_JoinGame); ok {
		return x.JoinGame
	}
	return nil
}

func (m *Request) GetRestartGame() *RequestRestartGame {
	if x, ok := m.GetRequest().(*Request_RestartGame); ok {
		return x.RestartGame
	}
	return nil
}

func (m *Request) GetStartReplay() *RequestStartReplay {
	if x, ok := m.GetRequest().(*Request_StartReplay); ok {
		return x.StartReplay
	}
	return nil
}

func (m *Request) GetLeaveGame() *RequestLeaveGame {
	if x, ok := m.GetRequest().(*Request_LeaveGame); ok {
		return x.LeaveGame
	}
	return nil
}

func (m *Request) GetQuickSave() *RequestQuickSave {
	if x, ok := m.GetRequest().(*Request_QuickSave); ok {
		return x.QuickSave
	}
	return nil
}

func (m *Request) GetQuickLoad() *RequestQuickLoad {
	if x, ok := m.GetRequest().(*Request_QuickLoad); ok {
		return x.QuickLoad
	}
	return nil
}

func (m *Request) GetQuit() *RequestQuit {
	if x, ok := m.GetRequest().(*Request_Quit); ok {
		return x.Quit
	}
	return nil
}

func (m *Request) GetGameInfo() *RequestGameInfo {
	if x, ok := m.GetRequest().(*Request_GameInfo); ok {
		return x.GameInfo
	}
	return nil
}

func (m *Request) GetObservation() *RequestObservation {
	if x, ok := m.GetRequest().(*Request_Observation); ok {
		return x.Observation
	}
	return nil
}

func (m *Request) GetAction() *RequestAction {
	if x, ok := m.GetRequest().(*Request_Action); ok {
		return x.Action
	}
	return nil
}

func (m *Request) GetStep() *RequestStep {
	if x, ok := m.GetRequest().(*Request_Step); ok {
		return x.Step
	}
	return nil
}

func (m *Request) GetData() *RequestData {
	if x, ok := m.GetRequest().(*Request_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Request) GetQuery() *RequestQuery {
	if x, ok := m.GetRequest().(*Request_Query); ok {
		return x.Query
	}
	return nil
}

func (m *Request) GetSaveReplay() *RequestSaveReplay {
	if x, ok := m.GetRequest().(*Request_SaveReplay); ok {
		return x.SaveReplay
	}
	return nil
}

func (m *Request) GetReplayInfo() *RequestReplayInfo {
	if x, ok := m.GetRequest().(*Request_ReplayInfo); ok {
		return x.ReplayInfo
	}
	return nil
}

func (m *Request) GetAvailableMaps() *RequestAvailableMaps {
	if x, ok := m.GetRequest().(*Request_AvailableMaps); ok {
		return x.AvailableMaps
	}
	return nil
}

func (m *Request) GetSaveMap() *RequestSaveMap {
	if x, ok := m.GetRequest().(*Request_SaveMap); ok {
		return x.SaveMap
	}
	return nil
}

func (m *Request) GetPing() *RequestPing {
	if x, ok := m.GetRequest().(*Request_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *Request) GetDebug() *RequestDebug {
	if x, ok := m.GetRequest().(*Request_Debug); ok {
		return x.Debug
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_CreateGame)(nil),
		(*Request_JoinGame)(nil),
		(*Request_RestartGame)(nil),
		(*Request_StartReplay)(nil),
		(*Request_LeaveGame)(nil),
		(*Request_QuickSave)(nil),
		(*Request_QuickLoad)(nil),
		(*Request_Quit)(nil),
		(*Request_GameInfo)(nil),
		(*Request_Observation)(nil),
		(*Request_Action)(nil),
		(*Request_Step)(nil),
		(*Request_Data)(nil),
		(*Request_Query)(nil),
		(*Request_SaveReplay)(nil),
		(*Request_ReplayInfo)(nil),
		(*Request_AvailableMaps)(nil),
		(*Request_SaveMap)(nil),
		(*Request_Ping)(nil),
		(*Request_Debug)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_CreateGame:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateGame); err != nil {
			return err
		}
	case *Request_JoinGame:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinGame); err != nil {
			return err
		}
	case *Request_RestartGame:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RestartGame); err != nil {
			return err
		}
	case *Request_StartReplay:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StartReplay); err != nil {
			return err
		}
	case *Request_LeaveGame:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveGame); err != nil {
			return err
		}
	case *Request_QuickSave:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickSave); err != nil {
			return err
		}
	case *Request_QuickLoad:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickLoad); err != nil {
			return err
		}
	case *Request_Quit:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quit); err != nil {
			return err
		}
	case *Request_GameInfo:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameInfo); err != nil {
			return err
		}
	case *Request_Observation:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Observation); err != nil {
			return err
		}
	case *Request_Action:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Action); err != nil {
			return err
		}
	case *Request_Step:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Step); err != nil {
			return err
		}
	case *Request_Data:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case *Request_Query:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Query); err != nil {
			return err
		}
	case *Request_SaveReplay:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SaveReplay); err != nil {
			return err
		}
	case *Request_ReplayInfo:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplayInfo); err != nil {
			return err
		}
	case *Request_AvailableMaps:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AvailableMaps); err != nil {
			return err
		}
	case *Request_SaveMap:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SaveMap); err != nil {
			return err
		}
	case *Request_Ping:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *Request_Debug:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Debug); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Request has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // request.create_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreateGame)
		err := b.DecodeMessage(msg)
		m.Request = &Request_CreateGame{msg}
		return true, err
	case 2: // request.join_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestJoinGame)
		err := b.DecodeMessage(msg)
		m.Request = &Request_JoinGame{msg}
		return true, err
	case 3: // request.restart_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestRestartGame)
		err := b.DecodeMessage(msg)
		m.Request = &Request_RestartGame{msg}
		return true, err
	case 4: // request.start_replay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestStartReplay)
		err := b.DecodeMessage(msg)
		m.Request = &Request_StartReplay{msg}
		return true, err
	case 5: // request.leave_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestLeaveGame)
		err := b.DecodeMessage(msg)
		m.Request = &Request_LeaveGame{msg}
		return true, err
	case 6: // request.quick_save
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestQuickSave)
		err := b.DecodeMessage(msg)
		m.Request = &Request_QuickSave{msg}
		return true, err
	case 7: // request.quick_load
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestQuickLoad)
		err := b.DecodeMessage(msg)
		m.Request = &Request_QuickLoad{msg}
		return true, err
	case 8: // request.quit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestQuit)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Quit{msg}
		return true, err
	case 9: // request.game_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGameInfo)
		err := b.DecodeMessage(msg)
		m.Request = &Request_GameInfo{msg}
		return true, err
	case 10: // request.observation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestObservation)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Observation{msg}
		return true, err
	case 11: // request.action
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestAction)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Action{msg}
		return true, err
	case 12: // request.step
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestStep)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Step{msg}
		return true, err
	case 13: // request.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestData)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Data{msg}
		return true, err
	case 14: // request.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestQuery)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Query{msg}
		return true, err
	case 15: // request.save_replay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestSaveReplay)
		err := b.DecodeMessage(msg)
		m.Request = &Request_SaveReplay{msg}
		return true, err
	case 16: // request.replay_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestReplayInfo)
		err := b.DecodeMessage(msg)
		m.Request = &Request_ReplayInfo{msg}
		return true, err
	case 17: // request.available_maps
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestAvailableMaps)
		err := b.DecodeMessage(msg)
		m.Request = &Request_AvailableMaps{msg}
		return true, err
	case 18: // request.save_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestSaveMap)
		err := b.DecodeMessage(msg)
		m.Request = &Request_SaveMap{msg}
		return true, err
	case 19: // request.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestPing)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Ping{msg}
		return true, err
	case 20: // request.debug
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestDebug)
		err := b.DecodeMessage(msg)
		m.Request = &Request_Debug{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_CreateGame:
		s := proto.Size(x.CreateGame)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_JoinGame:
		s := proto.Size(x.JoinGame)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RestartGame:
		s := proto.Size(x.RestartGame)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_StartReplay:
		s := proto.Size(x.StartReplay)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_LeaveGame:
		s := proto.Size(x.LeaveGame)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_QuickSave:
		s := proto.Size(x.QuickSave)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_QuickLoad:
		s := proto.Size(x.QuickLoad)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Quit:
		s := proto.Size(x.Quit)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GameInfo:
		s := proto.Size(x.GameInfo)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Observation:
		s := proto.Size(x.Observation)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Action:
		s := proto.Size(x.Action)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Step:
		s := proto.Size(x.Step)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Data:
		s := proto.Size(x.Data)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Query:
		s := proto.Size(x.Query)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_SaveReplay:
		s := proto.Size(x.SaveReplay)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ReplayInfo:
		s := proto.Size(x.ReplayInfo)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_AvailableMaps:
		s := proto.Size(x.AvailableMaps)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_SaveMap:
		s := proto.Size(x.SaveMap)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Ping:
		s := proto.Size(x.Ping)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Debug:
		s := proto.Size(x.Debug)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// Types that are valid to be assigned to Response:
	//	*Response_CreateGame
	//	*Response_JoinGame
	//	*Response_RestartGame
	//	*Response_StartReplay
	//	*Response_LeaveGame
	//	*Response_QuickSave
	//	*Response_QuickLoad
	//	*Response_Quit
	//	*Response_GameInfo
	//	*Response_Observation
	//	*Response_Action
	//	*Response_Step
	//	*Response_Data
	//	*Response_Query
	//	*Response_SaveReplay
	//	*Response_ReplayInfo
	//	*Response_AvailableMaps
	//	*Response_SaveMap
	//	*Response_Ping
	//	*Response_Debug
	Response         isResponse_Response `protobuf_oneof:"response"`
	Error            []string            `protobuf:"bytes,98,rep,name=error" json:"error,omitempty"`
	Status           *Status             `protobuf:"varint,99,opt,name=status,enum=SC2APIProtocol.Status" json:"status,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type isResponse_Response interface {
	isResponse_Response()
}

type Response_CreateGame struct {
	CreateGame *ResponseCreateGame `protobuf:"bytes,1,opt,name=create_game,json=createGame,oneof"`
}
type Response_JoinGame struct {
	JoinGame *ResponseJoinGame `protobuf:"bytes,2,opt,name=join_game,json=joinGame,oneof"`
}
type Response_RestartGame struct {
	RestartGame *ResponseRestartGame `protobuf:"bytes,3,opt,name=restart_game,json=restartGame,oneof"`
}
type Response_StartReplay struct {
	StartReplay *ResponseStartReplay `protobuf:"bytes,4,opt,name=start_replay,json=startReplay,oneof"`
}
type Response_LeaveGame struct {
	LeaveGame *ResponseLeaveGame `protobuf:"bytes,5,opt,name=leave_game,json=leaveGame,oneof"`
}
type Response_QuickSave struct {
	QuickSave *ResponseQuickSave `protobuf:"bytes,6,opt,name=quick_save,json=quickSave,oneof"`
}
type Response_QuickLoad struct {
	QuickLoad *ResponseQuickLoad `protobuf:"bytes,7,opt,name=quick_load,json=quickLoad,oneof"`
}
type Response_Quit struct {
	Quit *ResponseQuit `protobuf:"bytes,8,opt,name=quit,oneof"`
}
type Response_GameInfo struct {
	GameInfo *ResponseGameInfo `protobuf:"bytes,9,opt,name=game_info,json=gameInfo,oneof"`
}
type Response_Observation struct {
	Observation *ResponseObservation `protobuf:"bytes,10,opt,name=observation,oneof"`
}
type Response_Action struct {
	Action *ResponseAction `protobuf:"bytes,11,opt,name=action,oneof"`
}
type Response_Step struct {
	Step *ResponseStep `protobuf:"bytes,12,opt,name=step,oneof"`
}
type Response_Data struct {
	Data *ResponseData `protobuf:"bytes,13,opt,name=data,oneof"`
}
type Response_Query struct {
	Query *ResponseQuery `protobuf:"bytes,14,opt,name=query,oneof"`
}
type Response_SaveReplay struct {
	SaveReplay *ResponseSaveReplay `protobuf:"bytes,15,opt,name=save_replay,json=saveReplay,oneof"`
}
type Response_ReplayInfo struct {
	ReplayInfo *ResponseReplayInfo `protobuf:"bytes,16,opt,name=replay_info,json=replayInfo,oneof"`
}
type Response_AvailableMaps struct {
	AvailableMaps *ResponseAvailableMaps `protobuf:"bytes,17,opt,name=available_maps,json=availableMaps,oneof"`
}
type Response_SaveMap struct {
	SaveMap *ResponseSaveMap `protobuf:"bytes,18,opt,name=save_map,json=saveMap,oneof"`
}
type Response_Ping struct {
	Ping *ResponsePing `protobuf:"bytes,19,opt,name=ping,oneof"`
}
type Response_Debug struct {
	Debug *ResponseDebug `protobuf:"bytes,20,opt,name=debug,oneof"`
}

func (*Response_CreateGame) isResponse_Response()    {}
func (*Response_JoinGame) isResponse_Response()      {}
func (*Response_RestartGame) isResponse_Response()   {}
func (*Response_StartReplay) isResponse_Response()   {}
func (*Response_LeaveGame) isResponse_Response()     {}
func (*Response_QuickSave) isResponse_Response()     {}
func (*Response_QuickLoad) isResponse_Response()     {}
func (*Response_Quit) isResponse_Response()          {}
func (*Response_GameInfo) isResponse_Response()      {}
func (*Response_Observation) isResponse_Response()   {}
func (*Response_Action) isResponse_Response()        {}
func (*Response_Step) isResponse_Response()          {}
func (*Response_Data) isResponse_Response()          {}
func (*Response_Query) isResponse_Response()         {}
func (*Response_SaveReplay) isResponse_Response()    {}
func (*Response_ReplayInfo) isResponse_Response()    {}
func (*Response_AvailableMaps) isResponse_Response() {}
func (*Response_SaveMap) isResponse_Response()       {}
func (*Response_Ping) isResponse_Response()          {}
func (*Response_Debug) isResponse_Response()         {}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetCreateGame() *ResponseCreateGame {
	if x, ok := m.GetResponse().(*Response_CreateGame); ok {
		return x.CreateGame
	}
	return nil
}

func (m *Response) GetJoinGame() *ResponseJoinGame {
	if x, ok := m.GetResponse().(*Response_JoinGame); ok {
		return x.JoinGame
	}
	return nil
}

func (m *Response) GetRestartGame() *ResponseRestartGame {
	if x, ok := m.GetResponse().(*Response_RestartGame); ok {
		return x.RestartGame
	}
	return nil
}

func (m *Response) GetStartReplay() *ResponseStartReplay {
	if x, ok := m.GetResponse().(*Response_StartReplay); ok {
		return x.StartReplay
	}
	return nil
}

func (m *Response) GetLeaveGame() *ResponseLeaveGame {
	if x, ok := m.GetResponse().(*Response_LeaveGame); ok {
		return x.LeaveGame
	}
	return nil
}

func (m *Response) GetQuickSave() *ResponseQuickSave {
	if x, ok := m.GetResponse().(*Response_QuickSave); ok {
		return x.QuickSave
	}
	return nil
}

func (m *Response) GetQuickLoad() *ResponseQuickLoad {
	if x, ok := m.GetResponse().(*Response_QuickLoad); ok {
		return x.QuickLoad
	}
	return nil
}

func (m *Response) GetQuit() *ResponseQuit {
	if x, ok := m.GetResponse().(*Response_Quit); ok {
		return x.Quit
	}
	return nil
}

func (m *Response) GetGameInfo() *ResponseGameInfo {
	if x, ok := m.GetResponse().(*Response_GameInfo); ok {
		return x.GameInfo
	}
	return nil
}

func (m *Response) GetObservation() *ResponseObservation {
	if x, ok := m.GetResponse().(*Response_Observation); ok {
		return x.Observation
	}
	return nil
}

func (m *Response) GetAction() *ResponseAction {
	if x, ok := m.GetResponse().(*Response_Action); ok {
		return x.Action
	}
	return nil
}

func (m *Response) GetStep() *ResponseStep {
	if x, ok := m.GetResponse().(*Response_Step); ok {
		return x.Step
	}
	return nil
}

func (m *Response) GetData() *ResponseData {
	if x, ok := m.GetResponse().(*Response_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Response) GetQuery() *ResponseQuery {
	if x, ok := m.GetResponse().(*Response_Query); ok {
		return x.Query
	}
	return nil
}

func (m *Response) GetSaveReplay() *ResponseSaveReplay {
	if x, ok := m.GetResponse().(*Response_SaveReplay); ok {
		return x.SaveReplay
	}
	return nil
}

func (m *Response) GetReplayInfo() *ResponseReplayInfo {
	if x, ok := m.GetResponse().(*Response_ReplayInfo); ok {
		return x.ReplayInfo
	}
	return nil
}

func (m *Response) GetAvailableMaps() *ResponseAvailableMaps {
	if x, ok := m.GetResponse().(*Response_AvailableMaps); ok {
		return x.AvailableMaps
	}
	return nil
}

func (m *Response) GetSaveMap() *ResponseSaveMap {
	if x, ok := m.GetResponse().(*Response_SaveMap); ok {
		return x.SaveMap
	}
	return nil
}

func (m *Response) GetPing() *ResponsePing {
	if x, ok := m.GetResponse().(*Response_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *Response) GetDebug() *ResponseDebug {
	if x, ok := m.GetResponse().(*Response_Debug); ok {
		return x.Debug
	}
	return nil
}

func (m *Response) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetStatus() Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Status_launched
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_CreateGame)(nil),
		(*Response_JoinGame)(nil),
		(*Response_RestartGame)(nil),
		(*Response_StartReplay)(nil),
		(*Response_LeaveGame)(nil),
		(*Response_QuickSave)(nil),
		(*Response_QuickLoad)(nil),
		(*Response_Quit)(nil),
		(*Response_GameInfo)(nil),
		(*Response_Observation)(nil),
		(*Response_Action)(nil),
		(*Response_Step)(nil),
		(*Response_Data)(nil),
		(*Response_Query)(nil),
		(*Response_SaveReplay)(nil),
		(*Response_ReplayInfo)(nil),
		(*Response_AvailableMaps)(nil),
		(*Response_SaveMap)(nil),
		(*Response_Ping)(nil),
		(*Response_Debug)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_CreateGame:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateGame); err != nil {
			return err
		}
	case *Response_JoinGame:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinGame); err != nil {
			return err
		}
	case *Response_RestartGame:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RestartGame); err != nil {
			return err
		}
	case *Response_StartReplay:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StartReplay); err != nil {
			return err
		}
	case *Response_LeaveGame:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveGame); err != nil {
			return err
		}
	case *Response_QuickSave:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickSave); err != nil {
			return err
		}
	case *Response_QuickLoad:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickLoad); err != nil {
			return err
		}
	case *Response_Quit:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quit); err != nil {
			return err
		}
	case *Response_GameInfo:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameInfo); err != nil {
			return err
		}
	case *Response_Observation:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Observation); err != nil {
			return err
		}
	case *Response_Action:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Action); err != nil {
			return err
		}
	case *Response_Step:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Step); err != nil {
			return err
		}
	case *Response_Data:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case *Response_Query:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Query); err != nil {
			return err
		}
	case *Response_SaveReplay:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SaveReplay); err != nil {
			return err
		}
	case *Response_ReplayInfo:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplayInfo); err != nil {
			return err
		}
	case *Response_AvailableMaps:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AvailableMaps); err != nil {
			return err
		}
	case *Response_SaveMap:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SaveMap); err != nil {
			return err
		}
	case *Response_Ping:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *Response_Debug:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Debug); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Response has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // response.create_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreateGame)
		err := b.DecodeMessage(msg)
		m.Response = &Response_CreateGame{msg}
		return true, err
	case 2: // response.join_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseJoinGame)
		err := b.DecodeMessage(msg)
		m.Response = &Response_JoinGame{msg}
		return true, err
	case 3: // response.restart_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRestartGame)
		err := b.DecodeMessage(msg)
		m.Response = &Response_RestartGame{msg}
		return true, err
	case 4: // response.start_replay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseStartReplay)
		err := b.DecodeMessage(msg)
		m.Response = &Response_StartReplay{msg}
		return true, err
	case 5: // response.leave_game
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseLeaveGame)
		err := b.DecodeMessage(msg)
		m.Response = &Response_LeaveGame{msg}
		return true, err
	case 6: // response.quick_save
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseQuickSave)
		err := b.DecodeMessage(msg)
		m.Response = &Response_QuickSave{msg}
		return true, err
	case 7: // response.quick_load
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseQuickLoad)
		err := b.DecodeMessage(msg)
		m.Response = &Response_QuickLoad{msg}
		return true, err
	case 8: // response.quit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseQuit)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Quit{msg}
		return true, err
	case 9: // response.game_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseGameInfo)
		err := b.DecodeMessage(msg)
		m.Response = &Response_GameInfo{msg}
		return true, err
	case 10: // response.observation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseObservation)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Observation{msg}
		return true, err
	case 11: // response.action
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAction)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Action{msg}
		return true, err
	case 12: // response.step
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseStep)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Step{msg}
		return true, err
	case 13: // response.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseData)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Data{msg}
		return true, err
	case 14: // response.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseQuery)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Query{msg}
		return true, err
	case 15: // response.save_replay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseSaveReplay)
		err := b.DecodeMessage(msg)
		m.Response = &Response_SaveReplay{msg}
		return true, err
	case 16: // response.replay_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseReplayInfo)
		err := b.DecodeMessage(msg)
		m.Response = &Response_ReplayInfo{msg}
		return true, err
	case 17: // response.available_maps
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAvailableMaps)
		err := b.DecodeMessage(msg)
		m.Response = &Response_AvailableMaps{msg}
		return true, err
	case 18: // response.save_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseSaveMap)
		err := b.DecodeMessage(msg)
		m.Response = &Response_SaveMap{msg}
		return true, err
	case 19: // response.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponsePing)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Ping{msg}
		return true, err
	case 20: // response.debug
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseDebug)
		err := b.DecodeMessage(msg)
		m.Response = &Response_Debug{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_CreateGame:
		s := proto.Size(x.CreateGame)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_JoinGame:
		s := proto.Size(x.JoinGame)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RestartGame:
		s := proto.Size(x.RestartGame)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_StartReplay:
		s := proto.Size(x.StartReplay)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_LeaveGame:
		s := proto.Size(x.LeaveGame)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_QuickSave:
		s := proto.Size(x.QuickSave)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_QuickLoad:
		s := proto.Size(x.QuickLoad)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Quit:
		s := proto.Size(x.Quit)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GameInfo:
		s := proto.Size(x.GameInfo)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Observation:
		s := proto.Size(x.Observation)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Action:
		s := proto.Size(x.Action)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Step:
		s := proto.Size(x.Step)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Data:
		s := proto.Size(x.Data)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Query:
		s := proto.Size(x.Query)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_SaveReplay:
		s := proto.Size(x.SaveReplay)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ReplayInfo:
		s := proto.Size(x.ReplayInfo)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_AvailableMaps:
		s := proto.Size(x.AvailableMaps)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_SaveMap:
		s := proto.Size(x.SaveMap)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Ping:
		s := proto.Size(x.Ping)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Debug:
		s := proto.Size(x.Debug)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// -----------------------------------------------------------------------------
// If successful, puts the game into the status: init_game.
// The next expected request should be RequestJoinGame. Can also quit (exit).
type RequestCreateGame struct {
	// Types that are valid to be assigned to Map:
	//	*RequestCreateGame_LocalMap
	//	*RequestCreateGame_BattlenetMapName
	Map              isRequestCreateGame_Map `protobuf_oneof:"Map"`
	PlayerSetup      []*PlayerSetup          `protobuf:"bytes,3,rep,name=player_setup,json=playerSetup" json:"player_setup,omitempty"`
	DisableFog       *bool                   `protobuf:"varint,4,opt,name=disable_fog,json=disableFog" json:"disable_fog,omitempty"`
	RandomSeed       *uint32                 `protobuf:"varint,5,opt,name=random_seed,json=randomSeed" json:"random_seed,omitempty"`
	Realtime         *bool                   `protobuf:"varint,6,opt,name=realtime" json:"realtime,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *RequestCreateGame) Reset()                    { *m = RequestCreateGame{} }
func (m *RequestCreateGame) String() string            { return proto.CompactTextString(m) }
func (*RequestCreateGame) ProtoMessage()               {}
func (*RequestCreateGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

type isRequestCreateGame_Map interface {
	isRequestCreateGame_Map()
}

type RequestCreateGame_LocalMap struct {
	LocalMap *LocalMap `protobuf:"bytes,1,opt,name=local_map,json=localMap,oneof"`
}
type RequestCreateGame_BattlenetMapName struct {
	BattlenetMapName string `protobuf:"bytes,2,opt,name=battlenet_map_name,json=battlenetMapName,oneof"`
}

func (*RequestCreateGame_LocalMap) isRequestCreateGame_Map()         {}
func (*RequestCreateGame_BattlenetMapName) isRequestCreateGame_Map() {}

func (m *RequestCreateGame) GetMap() isRequestCreateGame_Map {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *RequestCreateGame) GetLocalMap() *LocalMap {
	if x, ok := m.GetMap().(*RequestCreateGame_LocalMap); ok {
		return x.LocalMap
	}
	return nil
}

func (m *RequestCreateGame) GetBattlenetMapName() string {
	if x, ok := m.GetMap().(*RequestCreateGame_BattlenetMapName); ok {
		return x.BattlenetMapName
	}
	return ""
}

func (m *RequestCreateGame) GetPlayerSetup() []*PlayerSetup {
	if m != nil {
		return m.PlayerSetup
	}
	return nil
}

func (m *RequestCreateGame) GetDisableFog() bool {
	if m != nil && m.DisableFog != nil {
		return *m.DisableFog
	}
	return false
}

func (m *RequestCreateGame) GetRandomSeed() uint32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *RequestCreateGame) GetRealtime() bool {
	if m != nil && m.Realtime != nil {
		return *m.Realtime
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestCreateGame) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestCreateGame_OneofMarshaler, _RequestCreateGame_OneofUnmarshaler, _RequestCreateGame_OneofSizer, []interface{}{
		(*RequestCreateGame_LocalMap)(nil),
		(*RequestCreateGame_BattlenetMapName)(nil),
	}
}

func _RequestCreateGame_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestCreateGame)
	// Map
	switch x := m.Map.(type) {
	case *RequestCreateGame_LocalMap:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LocalMap); err != nil {
			return err
		}
	case *RequestCreateGame_BattlenetMapName:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.BattlenetMapName)
	case nil:
	default:
		return fmt.Errorf("RequestCreateGame.Map has unexpected type %T", x)
	}
	return nil
}

func _RequestCreateGame_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestCreateGame)
	switch tag {
	case 1: // Map.local_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LocalMap)
		err := b.DecodeMessage(msg)
		m.Map = &RequestCreateGame_LocalMap{msg}
		return true, err
	case 2: // Map.battlenet_map_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Map = &RequestCreateGame_BattlenetMapName{x}
		return true, err
	default:
		return false, nil
	}
}

func _RequestCreateGame_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestCreateGame)
	// Map
	switch x := m.Map.(type) {
	case *RequestCreateGame_LocalMap:
		s := proto.Size(x.LocalMap)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCreateGame_BattlenetMapName:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.BattlenetMapName)))
		n += len(x.BattlenetMapName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LocalMap struct {
	// A map can be specified either by a file path or the data of the .SC2Map file.
	// If you provide both, it will play the game using map_data and store map_path
	// into the replay. (260 character max)
	MapPath          *string `protobuf:"bytes,1,opt,name=map_path,json=mapPath" json:"map_path,omitempty"`
	MapData          []byte  `protobuf:"bytes,7,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LocalMap) Reset()                    { *m = LocalMap{} }
func (m *LocalMap) String() string            { return proto.CompactTextString(m) }
func (*LocalMap) ProtoMessage()               {}
func (*LocalMap) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *LocalMap) GetMapPath() string {
	if m != nil && m.MapPath != nil {
		return *m.MapPath
	}
	return ""
}

func (m *LocalMap) GetMapData() []byte {
	if m != nil {
		return m.MapData
	}
	return nil
}

type ResponseCreateGame struct {
	Error            *ResponseCreateGame_Error `protobuf:"varint,1,opt,name=error,enum=SC2APIProtocol.ResponseCreateGame_Error" json:"error,omitempty"`
	ErrorDetails     *string                   `protobuf:"bytes,2,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ResponseCreateGame) Reset()                    { *m = ResponseCreateGame{} }
func (m *ResponseCreateGame) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreateGame) ProtoMessage()               {}
func (*ResponseCreateGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *ResponseCreateGame) GetError() ResponseCreateGame_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseCreateGame_MissingMap
}

func (m *ResponseCreateGame) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

// -----------------------------------------------------------------------------
// If successful, puts the game into the status: in_game. Will be able to
// request actions, observations and step the game.
type RequestJoinGame struct {
	// Types that are valid to be assigned to Participation:
	//	*RequestJoinGame_Race
	//	*RequestJoinGame_ObservedPlayerId
	Participation isRequestJoinGame_Participation `protobuf_oneof:"participation"`
	Options       *InterfaceOptions               `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	ServerPorts   *PortSet                        `protobuf:"bytes,4,opt,name=server_ports,json=serverPorts" json:"server_ports,omitempty"`
	ClientPorts   []*PortSet                      `protobuf:"bytes,5,rep,name=client_ports,json=clientPorts" json:"client_ports,omitempty"`
	// Currently only a singe client is supported.
	SharedPort       *int32 `protobuf:"varint,6,opt,name=shared_port,json=sharedPort" json:"shared_port,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestJoinGame) Reset()                    { *m = RequestJoinGame{} }
func (m *RequestJoinGame) String() string            { return proto.CompactTextString(m) }
func (*RequestJoinGame) ProtoMessage()               {}
func (*RequestJoinGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

type isRequestJoinGame_Participation interface {
	isRequestJoinGame_Participation()
}

type RequestJoinGame_Race struct {
	Race Race `protobuf:"varint,1,opt,name=race,enum=SC2APIProtocol.Race,oneof"`
}
type RequestJoinGame_ObservedPlayerId struct {
	ObservedPlayerId uint32 `protobuf:"varint,2,opt,name=observed_player_id,json=observedPlayerId,oneof"`
}

func (*RequestJoinGame_Race) isRequestJoinGame_Participation()             {}
func (*RequestJoinGame_ObservedPlayerId) isRequestJoinGame_Participation() {}

func (m *RequestJoinGame) GetParticipation() isRequestJoinGame_Participation {
	if m != nil {
		return m.Participation
	}
	return nil
}

func (m *RequestJoinGame) GetRace() Race {
	if x, ok := m.GetParticipation().(*RequestJoinGame_Race); ok {
		return x.Race
	}
	return Race_NoRace
}

func (m *RequestJoinGame) GetObservedPlayerId() uint32 {
	if x, ok := m.GetParticipation().(*RequestJoinGame_ObservedPlayerId); ok {
		return x.ObservedPlayerId
	}
	return 0
}

func (m *RequestJoinGame) GetOptions() *InterfaceOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *RequestJoinGame) GetServerPorts() *PortSet {
	if m != nil {
		return m.ServerPorts
	}
	return nil
}

func (m *RequestJoinGame) GetClientPorts() []*PortSet {
	if m != nil {
		return m.ClientPorts
	}
	return nil
}

func (m *RequestJoinGame) GetSharedPort() int32 {
	if m != nil && m.SharedPort != nil {
		return *m.SharedPort
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestJoinGame) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestJoinGame_OneofMarshaler, _RequestJoinGame_OneofUnmarshaler, _RequestJoinGame_OneofSizer, []interface{}{
		(*RequestJoinGame_Race)(nil),
		(*RequestJoinGame_ObservedPlayerId)(nil),
	}
}

func _RequestJoinGame_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestJoinGame)
	// participation
	switch x := m.Participation.(type) {
	case *RequestJoinGame_Race:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Race))
	case *RequestJoinGame_ObservedPlayerId:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ObservedPlayerId))
	case nil:
	default:
		return fmt.Errorf("RequestJoinGame.Participation has unexpected type %T", x)
	}
	return nil
}

func _RequestJoinGame_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestJoinGame)
	switch tag {
	case 1: // participation.race
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Participation = &RequestJoinGame_Race{Race(x)}
		return true, err
	case 2: // participation.observed_player_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Participation = &RequestJoinGame_ObservedPlayerId{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _RequestJoinGame_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestJoinGame)
	// participation
	switch x := m.Participation.(type) {
	case *RequestJoinGame_Race:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Race))
	case *RequestJoinGame_ObservedPlayerId:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ObservedPlayerId))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PortSet struct {
	GamePort         *int32 `protobuf:"varint,1,opt,name=game_port,json=gamePort" json:"game_port,omitempty"`
	BasePort         *int32 `protobuf:"varint,2,opt,name=base_port,json=basePort" json:"base_port,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PortSet) Reset()                    { *m = PortSet{} }
func (m *PortSet) String() string            { return proto.CompactTextString(m) }
func (*PortSet) ProtoMessage()               {}
func (*PortSet) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *PortSet) GetGamePort() int32 {
	if m != nil && m.GamePort != nil {
		return *m.GamePort
	}
	return 0
}

func (m *PortSet) GetBasePort() int32 {
	if m != nil && m.BasePort != nil {
		return *m.BasePort
	}
	return 0
}

type ResponseJoinGame struct {
	PlayerId         *uint32                 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Error            *ResponseJoinGame_Error `protobuf:"varint,2,opt,name=error,enum=SC2APIProtocol.ResponseJoinGame_Error" json:"error,omitempty"`
	ErrorDetails     *string                 `protobuf:"bytes,3,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ResponseJoinGame) Reset()                    { *m = ResponseJoinGame{} }
func (m *ResponseJoinGame) String() string            { return proto.CompactTextString(m) }
func (*ResponseJoinGame) ProtoMessage()               {}
func (*ResponseJoinGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *ResponseJoinGame) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ResponseJoinGame) GetError() ResponseJoinGame_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseJoinGame_MissingParticipation
}

func (m *ResponseJoinGame) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

// -----------------------------------------------------------------------------
type RequestRestartGame struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestRestartGame) Reset()                    { *m = RequestRestartGame{} }
func (m *RequestRestartGame) String() string            { return proto.CompactTextString(m) }
func (*RequestRestartGame) ProtoMessage()               {}
func (*RequestRestartGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

type ResponseRestartGame struct {
	Error            *ResponseRestartGame_Error `protobuf:"varint,1,opt,name=error,enum=SC2APIProtocol.ResponseRestartGame_Error" json:"error,omitempty"`
	ErrorDetails     *string                    `protobuf:"bytes,2,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ResponseRestartGame) Reset()                    { *m = ResponseRestartGame{} }
func (m *ResponseRestartGame) String() string            { return proto.CompactTextString(m) }
func (*ResponseRestartGame) ProtoMessage()               {}
func (*ResponseRestartGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *ResponseRestartGame) GetError() ResponseRestartGame_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseRestartGame_LaunchError
}

func (m *ResponseRestartGame) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

// -----------------------------------------------------------------------------
type RequestStartReplay struct {
	// Types that are valid to be assigned to Replay:
	//	*RequestStartReplay_ReplayPath
	//	*RequestStartReplay_ReplayData
	Replay           isRequestStartReplay_Replay `protobuf_oneof:"replay"`
	MapData          []byte                      `protobuf:"bytes,6,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	ObservedPlayerId *int32                      `protobuf:"varint,2,opt,name=observed_player_id,json=observedPlayerId" json:"observed_player_id,omitempty"`
	Options          *InterfaceOptions           `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	DisableFog       *bool                       `protobuf:"varint,4,opt,name=disable_fog,json=disableFog" json:"disable_fog,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *RequestStartReplay) Reset()                    { *m = RequestStartReplay{} }
func (m *RequestStartReplay) String() string            { return proto.CompactTextString(m) }
func (*RequestStartReplay) ProtoMessage()               {}
func (*RequestStartReplay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

type isRequestStartReplay_Replay interface {
	isRequestStartReplay_Replay()
}

type RequestStartReplay_ReplayPath struct {
	ReplayPath string `protobuf:"bytes,1,opt,name=replay_path,json=replayPath,oneof"`
}
type RequestStartReplay_ReplayData struct {
	ReplayData []byte `protobuf:"bytes,5,opt,name=replay_data,json=replayData,oneof"`
}

func (*RequestStartReplay_ReplayPath) isRequestStartReplay_Replay() {}
func (*RequestStartReplay_ReplayData) isRequestStartReplay_Replay() {}

func (m *RequestStartReplay) GetReplay() isRequestStartReplay_Replay {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *RequestStartReplay) GetReplayPath() string {
	if x, ok := m.GetReplay().(*RequestStartReplay_ReplayPath); ok {
		return x.ReplayPath
	}
	return ""
}

func (m *RequestStartReplay) GetReplayData() []byte {
	if x, ok := m.GetReplay().(*RequestStartReplay_ReplayData); ok {
		return x.ReplayData
	}
	return nil
}

func (m *RequestStartReplay) GetMapData() []byte {
	if m != nil {
		return m.MapData
	}
	return nil
}

func (m *RequestStartReplay) GetObservedPlayerId() int32 {
	if m != nil && m.ObservedPlayerId != nil {
		return *m.ObservedPlayerId
	}
	return 0
}

func (m *RequestStartReplay) GetOptions() *InterfaceOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *RequestStartReplay) GetDisableFog() bool {
	if m != nil && m.DisableFog != nil {
		return *m.DisableFog
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestStartReplay) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestStartReplay_OneofMarshaler, _RequestStartReplay_OneofUnmarshaler, _RequestStartReplay_OneofSizer, []interface{}{
		(*RequestStartReplay_ReplayPath)(nil),
		(*RequestStartReplay_ReplayData)(nil),
	}
}

func _RequestStartReplay_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestStartReplay)
	// replay
	switch x := m.Replay.(type) {
	case *RequestStartReplay_ReplayPath:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ReplayPath)
	case *RequestStartReplay_ReplayData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ReplayData)
	case nil:
	default:
		return fmt.Errorf("RequestStartReplay.Replay has unexpected type %T", x)
	}
	return nil
}

func _RequestStartReplay_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestStartReplay)
	switch tag {
	case 1: // replay.replay_path
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Replay = &RequestStartReplay_ReplayPath{x}
		return true, err
	case 5: // replay.replay_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Replay = &RequestStartReplay_ReplayData{x}
		return true, err
	default:
		return false, nil
	}
}

func _RequestStartReplay_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestStartReplay)
	// replay
	switch x := m.Replay.(type) {
	case *RequestStartReplay_ReplayPath:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ReplayPath)))
		n += len(x.ReplayPath)
	case *RequestStartReplay_ReplayData:
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ReplayData)))
		n += len(x.ReplayData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponseStartReplay struct {
	Error            *ResponseStartReplay_Error `protobuf:"varint,1,opt,name=error,enum=SC2APIProtocol.ResponseStartReplay_Error" json:"error,omitempty"`
	ErrorDetails     *string                    `protobuf:"bytes,2,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ResponseStartReplay) Reset()                    { *m = ResponseStartReplay{} }
func (m *ResponseStartReplay) String() string            { return proto.CompactTextString(m) }
func (*ResponseStartReplay) ProtoMessage()               {}
func (*ResponseStartReplay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *ResponseStartReplay) GetError() ResponseStartReplay_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseStartReplay_MissingReplay
}

func (m *ResponseStartReplay) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

// -----------------------------------------------------------------------------
type RequestLeaveGame struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestLeaveGame) Reset()                    { *m = RequestLeaveGame{} }
func (m *RequestLeaveGame) String() string            { return proto.CompactTextString(m) }
func (*RequestLeaveGame) ProtoMessage()               {}
func (*RequestLeaveGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

type ResponseLeaveGame struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseLeaveGame) Reset()                    { *m = ResponseLeaveGame{} }
func (m *ResponseLeaveGame) String() string            { return proto.CompactTextString(m) }
func (*ResponseLeaveGame) ProtoMessage()               {}
func (*ResponseLeaveGame) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

// -----------------------------------------------------------------------------
type RequestQuickSave struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestQuickSave) Reset()                    { *m = RequestQuickSave{} }
func (m *RequestQuickSave) String() string            { return proto.CompactTextString(m) }
func (*RequestQuickSave) ProtoMessage()               {}
func (*RequestQuickSave) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

// -----------------------------------------------------------------------------
type ResponseQuickSave struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseQuickSave) Reset()                    { *m = ResponseQuickSave{} }
func (m *ResponseQuickSave) String() string            { return proto.CompactTextString(m) }
func (*ResponseQuickSave) ProtoMessage()               {}
func (*ResponseQuickSave) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

// -----------------------------------------------------------------------------
type RequestQuickLoad struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestQuickLoad) Reset()                    { *m = RequestQuickLoad{} }
func (m *RequestQuickLoad) String() string            { return proto.CompactTextString(m) }
func (*RequestQuickLoad) ProtoMessage()               {}
func (*RequestQuickLoad) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

// -----------------------------------------------------------------------------
type ResponseQuickLoad struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseQuickLoad) Reset()                    { *m = ResponseQuickLoad{} }
func (m *ResponseQuickLoad) String() string            { return proto.CompactTextString(m) }
func (*ResponseQuickLoad) ProtoMessage()               {}
func (*ResponseQuickLoad) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

// -----------------------------------------------------------------------------
type RequestQuit struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestQuit) Reset()                    { *m = RequestQuit{} }
func (m *RequestQuit) String() string            { return proto.CompactTextString(m) }
func (*RequestQuit) ProtoMessage()               {}
func (*RequestQuit) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

type ResponseQuit struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseQuit) Reset()                    { *m = ResponseQuit{} }
func (m *ResponseQuit) String() string            { return proto.CompactTextString(m) }
func (*ResponseQuit) ProtoMessage()               {}
func (*ResponseQuit) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

// -----------------------------------------------------------------------------
type RequestGameInfo struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestGameInfo) Reset()                    { *m = RequestGameInfo{} }
func (m *RequestGameInfo) String() string            { return proto.CompactTextString(m) }
func (*RequestGameInfo) ProtoMessage()               {}
func (*RequestGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

type ResponseGameInfo struct {
	MapName          *string           `protobuf:"bytes,1,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	ModNames         []string          `protobuf:"bytes,6,rep,name=mod_names,json=modNames" json:"mod_names,omitempty"`
	LocalMapPath     *string           `protobuf:"bytes,2,opt,name=local_map_path,json=localMapPath" json:"local_map_path,omitempty"`
	PlayerInfo       []*PlayerInfo     `protobuf:"bytes,3,rep,name=player_info,json=playerInfo" json:"player_info,omitempty"`
	StartRaw         *StartRaw         `protobuf:"bytes,4,opt,name=start_raw,json=startRaw" json:"start_raw,omitempty"`
	Options          *InterfaceOptions `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ResponseGameInfo) Reset()                    { *m = ResponseGameInfo{} }
func (m *ResponseGameInfo) String() string            { return proto.CompactTextString(m) }
func (*ResponseGameInfo) ProtoMessage()               {}
func (*ResponseGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *ResponseGameInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *ResponseGameInfo) GetModNames() []string {
	if m != nil {
		return m.ModNames
	}
	return nil
}

func (m *ResponseGameInfo) GetLocalMapPath() string {
	if m != nil && m.LocalMapPath != nil {
		return *m.LocalMapPath
	}
	return ""
}

func (m *ResponseGameInfo) GetPlayerInfo() []*PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *ResponseGameInfo) GetStartRaw() *StartRaw {
	if m != nil {
		return m.StartRaw
	}
	return nil
}

func (m *ResponseGameInfo) GetOptions() *InterfaceOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// -----------------------------------------------------------------------------
type RequestObservation struct {
	DisableFog       *bool  `protobuf:"varint,1,opt,name=disable_fog,json=disableFog" json:"disable_fog,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestObservation) Reset()                    { *m = RequestObservation{} }
func (m *RequestObservation) String() string            { return proto.CompactTextString(m) }
func (*RequestObservation) ProtoMessage()               {}
func (*RequestObservation) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *RequestObservation) GetDisableFog() bool {
	if m != nil && m.DisableFog != nil {
		return *m.DisableFog
	}
	return false
}

type ResponseObservation struct {
	Actions          []*Action       `protobuf:"bytes,1,rep,name=actions" json:"actions,omitempty"`
	ActionErrors     []*ActionError  `protobuf:"bytes,2,rep,name=action_errors,json=actionErrors" json:"action_errors,omitempty"`
	Observation      *Observation    `protobuf:"bytes,3,opt,name=observation" json:"observation,omitempty"`
	PlayerResult     []*PlayerResult `protobuf:"bytes,4,rep,name=player_result,json=playerResult" json:"player_result,omitempty"`
	Chat             []*ChatReceived `protobuf:"bytes,5,rep,name=chat" json:"chat,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ResponseObservation) Reset()                    { *m = ResponseObservation{} }
func (m *ResponseObservation) String() string            { return proto.CompactTextString(m) }
func (*ResponseObservation) ProtoMessage()               {}
func (*ResponseObservation) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *ResponseObservation) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ResponseObservation) GetActionErrors() []*ActionError {
	if m != nil {
		return m.ActionErrors
	}
	return nil
}

func (m *ResponseObservation) GetObservation() *Observation {
	if m != nil {
		return m.Observation
	}
	return nil
}

func (m *ResponseObservation) GetPlayerResult() []*PlayerResult {
	if m != nil {
		return m.PlayerResult
	}
	return nil
}

func (m *ResponseObservation) GetChat() []*ChatReceived {
	if m != nil {
		return m.Chat
	}
	return nil
}

type ChatReceived struct {
	PlayerId         *int32  `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatReceived) Reset()                    { *m = ChatReceived{} }
func (m *ChatReceived) String() string            { return proto.CompactTextString(m) }
func (*ChatReceived) ProtoMessage()               {}
func (*ChatReceived) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *ChatReceived) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ChatReceived) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// -----------------------------------------------------------------------------
type RequestAction struct {
	Actions          []*Action `protobuf:"bytes,1,rep,name=actions" json:"actions,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *RequestAction) Reset()                    { *m = RequestAction{} }
func (m *RequestAction) String() string            { return proto.CompactTextString(m) }
func (*RequestAction) ProtoMessage()               {}
func (*RequestAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *RequestAction) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

type ResponseAction struct {
	Result           []ActionResult `protobuf:"varint,1,rep,name=result,enum=SC2APIProtocol.ActionResult" json:"result,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ResponseAction) Reset()                    { *m = ResponseAction{} }
func (m *ResponseAction) String() string            { return proto.CompactTextString(m) }
func (*ResponseAction) ProtoMessage()               {}
func (*ResponseAction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *ResponseAction) GetResult() []ActionResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// -----------------------------------------------------------------------------
type RequestStep struct {
	Count            *uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestStep) Reset()                    { *m = RequestStep{} }
func (m *RequestStep) String() string            { return proto.CompactTextString(m) }
func (*RequestStep) ProtoMessage()               {}
func (*RequestStep) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *RequestStep) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type ResponseStep struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseStep) Reset()                    { *m = ResponseStep{} }
func (m *ResponseStep) String() string            { return proto.CompactTextString(m) }
func (*ResponseStep) ProtoMessage()               {}
func (*ResponseStep) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

// -----------------------------------------------------------------------------
type RequestData struct {
	AbilityId        *bool  `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	UnitTypeId       *bool  `protobuf:"varint,2,opt,name=unit_type_id,json=unitTypeId" json:"unit_type_id,omitempty"`
	UpgradeId        *bool  `protobuf:"varint,3,opt,name=upgrade_id,json=upgradeId" json:"upgrade_id,omitempty"`
	BuffId           *bool  `protobuf:"varint,4,opt,name=buff_id,json=buffId" json:"buff_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestData) Reset()                    { *m = RequestData{} }
func (m *RequestData) String() string            { return proto.CompactTextString(m) }
func (*RequestData) ProtoMessage()               {}
func (*RequestData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

func (m *RequestData) GetAbilityId() bool {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return false
}

func (m *RequestData) GetUnitTypeId() bool {
	if m != nil && m.UnitTypeId != nil {
		return *m.UnitTypeId
	}
	return false
}

func (m *RequestData) GetUpgradeId() bool {
	if m != nil && m.UpgradeId != nil {
		return *m.UpgradeId
	}
	return false
}

func (m *RequestData) GetBuffId() bool {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return false
}

type ResponseData struct {
	Abilities        []*AbilityData  `protobuf:"bytes,1,rep,name=abilities" json:"abilities,omitempty"`
	Units            []*UnitTypeData `protobuf:"bytes,2,rep,name=units" json:"units,omitempty"`
	Upgrades         []*UpgradeData  `protobuf:"bytes,3,rep,name=upgrades" json:"upgrades,omitempty"`
	Buffs            []*BuffData     `protobuf:"bytes,4,rep,name=buffs" json:"buffs,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ResponseData) Reset()                    { *m = ResponseData{} }
func (m *ResponseData) String() string            { return proto.CompactTextString(m) }
func (*ResponseData) ProtoMessage()               {}
func (*ResponseData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *ResponseData) GetAbilities() []*AbilityData {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *ResponseData) GetUnits() []*UnitTypeData {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *ResponseData) GetUpgrades() []*UpgradeData {
	if m != nil {
		return m.Upgrades
	}
	return nil
}

func (m *ResponseData) GetBuffs() []*BuffData {
	if m != nil {
		return m.Buffs
	}
	return nil
}

// -----------------------------------------------------------------------------
type RequestSaveReplay struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestSaveReplay) Reset()                    { *m = RequestSaveReplay{} }
func (m *RequestSaveReplay) String() string            { return proto.CompactTextString(m) }
func (*RequestSaveReplay) ProtoMessage()               {}
func (*RequestSaveReplay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

type ResponseSaveReplay struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseSaveReplay) Reset()                    { *m = ResponseSaveReplay{} }
func (m *ResponseSaveReplay) String() string            { return proto.CompactTextString(m) }
func (*ResponseSaveReplay) ProtoMessage()               {}
func (*ResponseSaveReplay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

func (m *ResponseSaveReplay) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// -----------------------------------------------------------------------------
type RequestReplayInfo struct {
	// Types that are valid to be assigned to Replay:
	//	*RequestReplayInfo_ReplayPath
	//	*RequestReplayInfo_ReplayData
	Replay           isRequestReplayInfo_Replay `protobuf_oneof:"replay"`
	DownloadData     *bool                      `protobuf:"varint,3,opt,name=download_data,json=downloadData" json:"download_data,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *RequestReplayInfo) Reset()                    { *m = RequestReplayInfo{} }
func (m *RequestReplayInfo) String() string            { return proto.CompactTextString(m) }
func (*RequestReplayInfo) ProtoMessage()               {}
func (*RequestReplayInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

type isRequestReplayInfo_Replay interface {
	isRequestReplayInfo_Replay()
}

type RequestReplayInfo_ReplayPath struct {
	ReplayPath string `protobuf:"bytes,1,opt,name=replay_path,json=replayPath,oneof"`
}
type RequestReplayInfo_ReplayData struct {
	ReplayData []byte `protobuf:"bytes,2,opt,name=replay_data,json=replayData,oneof"`
}

func (*RequestReplayInfo_ReplayPath) isRequestReplayInfo_Replay() {}
func (*RequestReplayInfo_ReplayData) isRequestReplayInfo_Replay() {}

func (m *RequestReplayInfo) GetReplay() isRequestReplayInfo_Replay {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *RequestReplayInfo) GetReplayPath() string {
	if x, ok := m.GetReplay().(*RequestReplayInfo_ReplayPath); ok {
		return x.ReplayPath
	}
	return ""
}

func (m *RequestReplayInfo) GetReplayData() []byte {
	if x, ok := m.GetReplay().(*RequestReplayInfo_ReplayData); ok {
		return x.ReplayData
	}
	return nil
}

func (m *RequestReplayInfo) GetDownloadData() bool {
	if m != nil && m.DownloadData != nil {
		return *m.DownloadData
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestReplayInfo) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestReplayInfo_OneofMarshaler, _RequestReplayInfo_OneofUnmarshaler, _RequestReplayInfo_OneofSizer, []interface{}{
		(*RequestReplayInfo_ReplayPath)(nil),
		(*RequestReplayInfo_ReplayData)(nil),
	}
}

func _RequestReplayInfo_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestReplayInfo)
	// replay
	switch x := m.Replay.(type) {
	case *RequestReplayInfo_ReplayPath:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ReplayPath)
	case *RequestReplayInfo_ReplayData:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ReplayData)
	case nil:
	default:
		return fmt.Errorf("RequestReplayInfo.Replay has unexpected type %T", x)
	}
	return nil
}

func _RequestReplayInfo_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestReplayInfo)
	switch tag {
	case 1: // replay.replay_path
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Replay = &RequestReplayInfo_ReplayPath{x}
		return true, err
	case 2: // replay.replay_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Replay = &RequestReplayInfo_ReplayData{x}
		return true, err
	default:
		return false, nil
	}
}

func _RequestReplayInfo_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestReplayInfo)
	// replay
	switch x := m.Replay.(type) {
	case *RequestReplayInfo_ReplayPath:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ReplayPath)))
		n += len(x.ReplayPath)
	case *RequestReplayInfo_ReplayData:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ReplayData)))
		n += len(x.ReplayData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PlayerInfoExtra struct {
	PlayerInfo       *PlayerInfo   `protobuf:"bytes,1,opt,name=player_info,json=playerInfo" json:"player_info,omitempty"`
	PlayerResult     *PlayerResult `protobuf:"bytes,2,opt,name=player_result,json=playerResult" json:"player_result,omitempty"`
	PlayerMmr        *int32        `protobuf:"varint,3,opt,name=player_mmr,json=playerMmr" json:"player_mmr,omitempty"`
	PlayerApm        *int32        `protobuf:"varint,4,opt,name=player_apm,json=playerApm" json:"player_apm,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlayerInfoExtra) Reset()                    { *m = PlayerInfoExtra{} }
func (m *PlayerInfoExtra) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfoExtra) ProtoMessage()               {}
func (*PlayerInfoExtra) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

func (m *PlayerInfoExtra) GetPlayerInfo() *PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PlayerInfoExtra) GetPlayerResult() *PlayerResult {
	if m != nil {
		return m.PlayerResult
	}
	return nil
}

func (m *PlayerInfoExtra) GetPlayerMmr() int32 {
	if m != nil && m.PlayerMmr != nil {
		return *m.PlayerMmr
	}
	return 0
}

func (m *PlayerInfoExtra) GetPlayerApm() int32 {
	if m != nil && m.PlayerApm != nil {
		return *m.PlayerApm
	}
	return 0
}

type ResponseReplayInfo struct {
	MapName             *string                   `protobuf:"bytes,1,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	LocalMapPath        *string                   `protobuf:"bytes,2,opt,name=local_map_path,json=localMapPath" json:"local_map_path,omitempty"`
	PlayerInfo          []*PlayerInfoExtra        `protobuf:"bytes,3,rep,name=player_info,json=playerInfo" json:"player_info,omitempty"`
	GameDurationLoops   *uint32                   `protobuf:"varint,4,opt,name=game_duration_loops,json=gameDurationLoops" json:"game_duration_loops,omitempty"`
	GameDurationSeconds *float32                  `protobuf:"fixed32,5,opt,name=game_duration_seconds,json=gameDurationSeconds" json:"game_duration_seconds,omitempty"`
	GameVersion         *string                   `protobuf:"bytes,6,opt,name=game_version,json=gameVersion" json:"game_version,omitempty"`
	DataVersion         *string                   `protobuf:"bytes,11,opt,name=data_version,json=dataVersion" json:"data_version,omitempty"`
	DataBuild           *uint32                   `protobuf:"varint,7,opt,name=data_build,json=dataBuild" json:"data_build,omitempty"`
	BaseBuild           *uint32                   `protobuf:"varint,8,opt,name=base_build,json=baseBuild" json:"base_build,omitempty"`
	Error               *ResponseReplayInfo_Error `protobuf:"varint,9,opt,name=error,enum=SC2APIProtocol.ResponseReplayInfo_Error" json:"error,omitempty"`
	ErrorDetails        *string                   `protobuf:"bytes,10,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *ResponseReplayInfo) Reset()                    { *m = ResponseReplayInfo{} }
func (m *ResponseReplayInfo) String() string            { return proto.CompactTextString(m) }
func (*ResponseReplayInfo) ProtoMessage()               {}
func (*ResponseReplayInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *ResponseReplayInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *ResponseReplayInfo) GetLocalMapPath() string {
	if m != nil && m.LocalMapPath != nil {
		return *m.LocalMapPath
	}
	return ""
}

func (m *ResponseReplayInfo) GetPlayerInfo() []*PlayerInfoExtra {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *ResponseReplayInfo) GetGameDurationLoops() uint32 {
	if m != nil && m.GameDurationLoops != nil {
		return *m.GameDurationLoops
	}
	return 0
}

func (m *ResponseReplayInfo) GetGameDurationSeconds() float32 {
	if m != nil && m.GameDurationSeconds != nil {
		return *m.GameDurationSeconds
	}
	return 0
}

func (m *ResponseReplayInfo) GetGameVersion() string {
	if m != nil && m.GameVersion != nil {
		return *m.GameVersion
	}
	return ""
}

func (m *ResponseReplayInfo) GetDataVersion() string {
	if m != nil && m.DataVersion != nil {
		return *m.DataVersion
	}
	return ""
}

func (m *ResponseReplayInfo) GetDataBuild() uint32 {
	if m != nil && m.DataBuild != nil {
		return *m.DataBuild
	}
	return 0
}

func (m *ResponseReplayInfo) GetBaseBuild() uint32 {
	if m != nil && m.BaseBuild != nil {
		return *m.BaseBuild
	}
	return 0
}

func (m *ResponseReplayInfo) GetError() ResponseReplayInfo_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseReplayInfo_MissingReplay
}

func (m *ResponseReplayInfo) GetErrorDetails() string {
	if m != nil && m.ErrorDetails != nil {
		return *m.ErrorDetails
	}
	return ""
}

// -----------------------------------------------------------------------------
type RequestAvailableMaps struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestAvailableMaps) Reset()                    { *m = RequestAvailableMaps{} }
func (m *RequestAvailableMaps) String() string            { return proto.CompactTextString(m) }
func (*RequestAvailableMaps) ProtoMessage()               {}
func (*RequestAvailableMaps) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{36} }

// This will only contain locally cached BattleNet maps.
// To download all ladder maps, log in and queue into a ladder match.
// To download any other map, play a custom game on that map.
type ResponseAvailableMaps struct {
	LocalMapPaths     []string `protobuf:"bytes,1,rep,name=local_map_paths,json=localMapPaths" json:"local_map_paths,omitempty"`
	BattlenetMapNames []string `protobuf:"bytes,2,rep,name=battlenet_map_names,json=battlenetMapNames" json:"battlenet_map_names,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *ResponseAvailableMaps) Reset()                    { *m = ResponseAvailableMaps{} }
func (m *ResponseAvailableMaps) String() string            { return proto.CompactTextString(m) }
func (*ResponseAvailableMaps) ProtoMessage()               {}
func (*ResponseAvailableMaps) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{37} }

func (m *ResponseAvailableMaps) GetLocalMapPaths() []string {
	if m != nil {
		return m.LocalMapPaths
	}
	return nil
}

func (m *ResponseAvailableMaps) GetBattlenetMapNames() []string {
	if m != nil {
		return m.BattlenetMapNames
	}
	return nil
}

// -----------------------------------------------------------------------------
// Copies map data into the path specified.
type RequestSaveMap struct {
	MapPath          *string `protobuf:"bytes,1,opt,name=map_path,json=mapPath" json:"map_path,omitempty"`
	MapData          []byte  `protobuf:"bytes,2,opt,name=map_data,json=mapData" json:"map_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestSaveMap) Reset()                    { *m = RequestSaveMap{} }
func (m *RequestSaveMap) String() string            { return proto.CompactTextString(m) }
func (*RequestSaveMap) ProtoMessage()               {}
func (*RequestSaveMap) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{38} }

func (m *RequestSaveMap) GetMapPath() string {
	if m != nil && m.MapPath != nil {
		return *m.MapPath
	}
	return ""
}

func (m *RequestSaveMap) GetMapData() []byte {
	if m != nil {
		return m.MapData
	}
	return nil
}

type ResponseSaveMap struct {
	Error            *ResponseSaveMap_Error `protobuf:"varint,1,opt,name=error,enum=SC2APIProtocol.ResponseSaveMap_Error" json:"error,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ResponseSaveMap) Reset()                    { *m = ResponseSaveMap{} }
func (m *ResponseSaveMap) String() string            { return proto.CompactTextString(m) }
func (*ResponseSaveMap) ProtoMessage()               {}
func (*ResponseSaveMap) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{39} }

func (m *ResponseSaveMap) GetError() ResponseSaveMap_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ResponseSaveMap_InvalidMapData
}

// -----------------------------------------------------------------------------
type RequestPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestPing) Reset()                    { *m = RequestPing{} }
func (m *RequestPing) String() string            { return proto.CompactTextString(m) }
func (*RequestPing) ProtoMessage()               {}
func (*RequestPing) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{40} }

type ResponsePing struct {
	GameVersion      *string `protobuf:"bytes,1,opt,name=game_version,json=gameVersion" json:"game_version,omitempty"`
	DataVersion      *string `protobuf:"bytes,2,opt,name=data_version,json=dataVersion" json:"data_version,omitempty"`
	DataBuild        *uint32 `protobuf:"varint,3,opt,name=data_build,json=dataBuild" json:"data_build,omitempty"`
	BaseBuild        *uint32 `protobuf:"varint,4,opt,name=base_build,json=baseBuild" json:"base_build,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResponsePing) Reset()                    { *m = ResponsePing{} }
func (m *ResponsePing) String() string            { return proto.CompactTextString(m) }
func (*ResponsePing) ProtoMessage()               {}
func (*ResponsePing) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{41} }

func (m *ResponsePing) GetGameVersion() string {
	if m != nil && m.GameVersion != nil {
		return *m.GameVersion
	}
	return ""
}

func (m *ResponsePing) GetDataVersion() string {
	if m != nil && m.DataVersion != nil {
		return *m.DataVersion
	}
	return ""
}

func (m *ResponsePing) GetDataBuild() uint32 {
	if m != nil && m.DataBuild != nil {
		return *m.DataBuild
	}
	return 0
}

func (m *ResponsePing) GetBaseBuild() uint32 {
	if m != nil && m.BaseBuild != nil {
		return *m.BaseBuild
	}
	return 0
}

// -----------------------------------------------------------------------------
type RequestDebug struct {
	Debug            []*DebugCommand `protobuf:"bytes,1,rep,name=debug" json:"debug,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RequestDebug) Reset()                    { *m = RequestDebug{} }
func (m *RequestDebug) String() string            { return proto.CompactTextString(m) }
func (*RequestDebug) ProtoMessage()               {}
func (*RequestDebug) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{42} }

func (m *RequestDebug) GetDebug() []*DebugCommand {
	if m != nil {
		return m.Debug
	}
	return nil
}

type ResponseDebug struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResponseDebug) Reset()                    { *m = ResponseDebug{} }
func (m *ResponseDebug) String() string            { return proto.CompactTextString(m) }
func (*ResponseDebug) ProtoMessage()               {}
func (*ResponseDebug) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{43} }

type PlayerSetup struct {
	Type *PlayerType `protobuf:"varint,1,opt,name=type,enum=SC2APIProtocol.PlayerType" json:"type,omitempty"`
	// Only used for a computer player.
	Race             *Race       `protobuf:"varint,2,opt,name=race,enum=SC2APIProtocol.Race" json:"race,omitempty"`
	Difficulty       *Difficulty `protobuf:"varint,3,opt,name=difficulty,enum=SC2APIProtocol.Difficulty" json:"difficulty,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PlayerSetup) Reset()                    { *m = PlayerSetup{} }
func (m *PlayerSetup) String() string            { return proto.CompactTextString(m) }
func (*PlayerSetup) ProtoMessage()               {}
func (*PlayerSetup) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{44} }

func (m *PlayerSetup) GetType() PlayerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PlayerType_Participant
}

func (m *PlayerSetup) GetRace() Race {
	if m != nil && m.Race != nil {
		return *m.Race
	}
	return Race_NoRace
}

func (m *PlayerSetup) GetDifficulty() Difficulty {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return Difficulty_VeryEasy
}

type SpatialCameraSetup struct {
	Width             *float32 `protobuf:"fixed32,1,opt,name=width" json:"width,omitempty"`
	Resolution        *Size2DI `protobuf:"bytes,2,opt,name=resolution" json:"resolution,omitempty"`
	MinimapResolution *Size2DI `protobuf:"bytes,3,opt,name=minimap_resolution,json=minimapResolution" json:"minimap_resolution,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *SpatialCameraSetup) Reset()                    { *m = SpatialCameraSetup{} }
func (m *SpatialCameraSetup) String() string            { return proto.CompactTextString(m) }
func (*SpatialCameraSetup) ProtoMessage()               {}
func (*SpatialCameraSetup) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{45} }

func (m *SpatialCameraSetup) GetWidth() float32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *SpatialCameraSetup) GetResolution() *Size2DI {
	if m != nil {
		return m.Resolution
	}
	return nil
}

func (m *SpatialCameraSetup) GetMinimapResolution() *Size2DI {
	if m != nil {
		return m.MinimapResolution
	}
	return nil
}

type InterfaceOptions struct {
	// Interface options
	Raw              *bool               `protobuf:"varint,1,opt,name=raw" json:"raw,omitempty"`
	Score            *bool               `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	FeatureLayer     *SpatialCameraSetup `protobuf:"bytes,3,opt,name=feature_layer,json=featureLayer" json:"feature_layer,omitempty"`
	Render           *SpatialCameraSetup `protobuf:"bytes,4,opt,name=render" json:"render,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *InterfaceOptions) Reset()                    { *m = InterfaceOptions{} }
func (m *InterfaceOptions) String() string            { return proto.CompactTextString(m) }
func (*InterfaceOptions) ProtoMessage()               {}
func (*InterfaceOptions) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{46} }

func (m *InterfaceOptions) GetRaw() bool {
	if m != nil && m.Raw != nil {
		return *m.Raw
	}
	return false
}

func (m *InterfaceOptions) GetScore() bool {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return false
}

func (m *InterfaceOptions) GetFeatureLayer() *SpatialCameraSetup {
	if m != nil {
		return m.FeatureLayer
	}
	return nil
}

func (m *InterfaceOptions) GetRender() *SpatialCameraSetup {
	if m != nil {
		return m.Render
	}
	return nil
}

type PlayerInfo struct {
	// Identifier that will be used to reference this player.
	// SC2 will always assign playerIds starting from 1 in standard Melee maps. This may not be true in custom maps.
	PlayerId         *uint32     `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Type             *PlayerType `protobuf:"varint,2,opt,name=type,enum=SC2APIProtocol.PlayerType" json:"type,omitempty"`
	RaceRequested    *Race       `protobuf:"varint,3,opt,name=race_requested,json=raceRequested,enum=SC2APIProtocol.Race" json:"race_requested,omitempty"`
	RaceActual       *Race       `protobuf:"varint,4,opt,name=race_actual,json=raceActual,enum=SC2APIProtocol.Race" json:"race_actual,omitempty"`
	Difficulty       *Difficulty `protobuf:"varint,5,opt,name=difficulty,enum=SC2APIProtocol.Difficulty" json:"difficulty,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{47} }

func (m *PlayerInfo) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *PlayerInfo) GetType() PlayerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PlayerType_Participant
}

func (m *PlayerInfo) GetRaceRequested() Race {
	if m != nil && m.RaceRequested != nil {
		return *m.RaceRequested
	}
	return Race_NoRace
}

func (m *PlayerInfo) GetRaceActual() Race {
	if m != nil && m.RaceActual != nil {
		return *m.RaceActual
	}
	return Race_NoRace
}

func (m *PlayerInfo) GetDifficulty() Difficulty {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return Difficulty_VeryEasy
}

type PlayerCommon struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Minerals         *uint32 `protobuf:"varint,2,opt,name=minerals" json:"minerals,omitempty"`
	Vespene          *uint32 `protobuf:"varint,3,opt,name=vespene" json:"vespene,omitempty"`
	FoodCap          *uint32 `protobuf:"varint,4,opt,name=food_cap,json=foodCap" json:"food_cap,omitempty"`
	FoodUsed         *uint32 `protobuf:"varint,5,opt,name=food_used,json=foodUsed" json:"food_used,omitempty"`
	FoodArmy         *uint32 `protobuf:"varint,6,opt,name=food_army,json=foodArmy" json:"food_army,omitempty"`
	FoodWorkers      *uint32 `protobuf:"varint,7,opt,name=food_workers,json=foodWorkers" json:"food_workers,omitempty"`
	IdleWorkerCount  *uint32 `protobuf:"varint,8,opt,name=idle_worker_count,json=idleWorkerCount" json:"idle_worker_count,omitempty"`
	ArmyCount        *uint32 `protobuf:"varint,9,opt,name=army_count,json=armyCount" json:"army_count,omitempty"`
	WarpGateCount    *uint32 `protobuf:"varint,10,opt,name=warp_gate_count,json=warpGateCount" json:"warp_gate_count,omitempty"`
	LarvaCount       *uint32 `protobuf:"varint,11,opt,name=larva_count,json=larvaCount" json:"larva_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerCommon) Reset()                    { *m = PlayerCommon{} }
func (m *PlayerCommon) String() string            { return proto.CompactTextString(m) }
func (*PlayerCommon) ProtoMessage()               {}
func (*PlayerCommon) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{48} }

func (m *PlayerCommon) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *PlayerCommon) GetMinerals() uint32 {
	if m != nil && m.Minerals != nil {
		return *m.Minerals
	}
	return 0
}

func (m *PlayerCommon) GetVespene() uint32 {
	if m != nil && m.Vespene != nil {
		return *m.Vespene
	}
	return 0
}

func (m *PlayerCommon) GetFoodCap() uint32 {
	if m != nil && m.FoodCap != nil {
		return *m.FoodCap
	}
	return 0
}

func (m *PlayerCommon) GetFoodUsed() uint32 {
	if m != nil && m.FoodUsed != nil {
		return *m.FoodUsed
	}
	return 0
}

func (m *PlayerCommon) GetFoodArmy() uint32 {
	if m != nil && m.FoodArmy != nil {
		return *m.FoodArmy
	}
	return 0
}

func (m *PlayerCommon) GetFoodWorkers() uint32 {
	if m != nil && m.FoodWorkers != nil {
		return *m.FoodWorkers
	}
	return 0
}

func (m *PlayerCommon) GetIdleWorkerCount() uint32 {
	if m != nil && m.IdleWorkerCount != nil {
		return *m.IdleWorkerCount
	}
	return 0
}

func (m *PlayerCommon) GetArmyCount() uint32 {
	if m != nil && m.ArmyCount != nil {
		return *m.ArmyCount
	}
	return 0
}

func (m *PlayerCommon) GetWarpGateCount() uint32 {
	if m != nil && m.WarpGateCount != nil {
		return *m.WarpGateCount
	}
	return 0
}

func (m *PlayerCommon) GetLarvaCount() uint32 {
	if m != nil && m.LarvaCount != nil {
		return *m.LarvaCount
	}
	return 0
}

type Observation struct {
	GameLoop         *uint32                  `protobuf:"varint,9,opt,name=game_loop,json=gameLoop" json:"game_loop,omitempty"`
	PlayerCommon     *PlayerCommon            `protobuf:"bytes,1,opt,name=player_common,json=playerCommon" json:"player_common,omitempty"`
	Alerts           []Alert                  `protobuf:"varint,10,rep,name=alerts,enum=SC2APIProtocol.Alert" json:"alerts,omitempty"`
	Abilities        []*AvailableAbility      `protobuf:"bytes,3,rep,name=abilities" json:"abilities,omitempty"`
	Score            *Score                   `protobuf:"bytes,4,opt,name=score" json:"score,omitempty"`
	RawData          *ObservationRaw          `protobuf:"bytes,5,opt,name=raw_data,json=rawData" json:"raw_data,omitempty"`
	FeatureLayerData *ObservationFeatureLayer `protobuf:"bytes,6,opt,name=feature_layer_data,json=featureLayerData" json:"feature_layer_data,omitempty"`
	RenderData       *ObservationRender       `protobuf:"bytes,7,opt,name=render_data,json=renderData" json:"render_data,omitempty"`
	UiData           *ObservationUI           `protobuf:"bytes,8,opt,name=ui_data,json=uiData" json:"ui_data,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Observation) Reset()                    { *m = Observation{} }
func (m *Observation) String() string            { return proto.CompactTextString(m) }
func (*Observation) ProtoMessage()               {}
func (*Observation) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{49} }

func (m *Observation) GetGameLoop() uint32 {
	if m != nil && m.GameLoop != nil {
		return *m.GameLoop
	}
	return 0
}

func (m *Observation) GetPlayerCommon() *PlayerCommon {
	if m != nil {
		return m.PlayerCommon
	}
	return nil
}

func (m *Observation) GetAlerts() []Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

func (m *Observation) GetAbilities() []*AvailableAbility {
	if m != nil {
		return m.Abilities
	}
	return nil
}

func (m *Observation) GetScore() *Score {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *Observation) GetRawData() *ObservationRaw {
	if m != nil {
		return m.RawData
	}
	return nil
}

func (m *Observation) GetFeatureLayerData() *ObservationFeatureLayer {
	if m != nil {
		return m.FeatureLayerData
	}
	return nil
}

func (m *Observation) GetRenderData() *ObservationRender {
	if m != nil {
		return m.RenderData
	}
	return nil
}

func (m *Observation) GetUiData() *ObservationUI {
	if m != nil {
		return m.UiData
	}
	return nil
}

type Action struct {
	ActionRaw          *ActionRaw     `protobuf:"bytes,1,opt,name=action_raw,json=actionRaw" json:"action_raw,omitempty"`
	ActionFeatureLayer *ActionSpatial `protobuf:"bytes,2,opt,name=action_feature_layer,json=actionFeatureLayer" json:"action_feature_layer,omitempty"`
	ActionRender       *ActionSpatial `protobuf:"bytes,3,opt,name=action_render,json=actionRender" json:"action_render,omitempty"`
	ActionUi           *ActionUI      `protobuf:"bytes,4,opt,name=action_ui,json=actionUi" json:"action_ui,omitempty"`
	Chat               []*ActionChat  `protobuf:"bytes,5,rep,name=chat" json:"chat,omitempty"`
	XXX_unrecognized   []byte         `json:"-"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{50} }

func (m *Action) GetActionRaw() *ActionRaw {
	if m != nil {
		return m.ActionRaw
	}
	return nil
}

func (m *Action) GetActionFeatureLayer() *ActionSpatial {
	if m != nil {
		return m.ActionFeatureLayer
	}
	return nil
}

func (m *Action) GetActionRender() *ActionSpatial {
	if m != nil {
		return m.ActionRender
	}
	return nil
}

func (m *Action) GetActionUi() *ActionUI {
	if m != nil {
		return m.ActionUi
	}
	return nil
}

func (m *Action) GetChat() []*ActionChat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type ActionChat struct {
	Channel          *ActionChat_Channel `protobuf:"varint,1,opt,name=channel,enum=SC2APIProtocol.ActionChat_Channel" json:"channel,omitempty"`
	Message          *string             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ActionChat) Reset()                    { *m = ActionChat{} }
func (m *ActionChat) String() string            { return proto.CompactTextString(m) }
func (*ActionChat) ProtoMessage()               {}
func (*ActionChat) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{51} }

func (m *ActionChat) GetChannel() ActionChat_Channel {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ActionChat_Broadcast
}

func (m *ActionChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type ActionError struct {
	UnitTag          *uint64       `protobuf:"varint,1,opt,name=unit_tag,json=unitTag" json:"unit_tag,omitempty"`
	AbilityId        *uint64       `protobuf:"varint,2,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Result           *ActionResult `protobuf:"varint,3,opt,name=result,enum=SC2APIProtocol.ActionResult" json:"result,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ActionError) Reset()                    { *m = ActionError{} }
func (m *ActionError) String() string            { return proto.CompactTextString(m) }
func (*ActionError) ProtoMessage()               {}
func (*ActionError) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{52} }

func (m *ActionError) GetUnitTag() uint64 {
	if m != nil && m.UnitTag != nil {
		return *m.UnitTag
	}
	return 0
}

func (m *ActionError) GetAbilityId() uint64 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *ActionError) GetResult() ActionResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ActionResult_Success
}

type PlayerResult struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Result           *Result `protobuf:"varint,2,opt,name=result,enum=SC2APIProtocol.Result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerResult) Reset()                    { *m = PlayerResult{} }
func (m *PlayerResult) String() string            { return proto.CompactTextString(m) }
func (*PlayerResult) ProtoMessage()               {}
func (*PlayerResult) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{53} }

func (m *PlayerResult) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *PlayerResult) GetResult() Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Result_Victory
}

func init() {
	proto.RegisterType((*Request)(nil), "SC2APIProtocol.Request")
	proto.RegisterType((*Response)(nil), "SC2APIProtocol.Response")
	proto.RegisterType((*RequestCreateGame)(nil), "SC2APIProtocol.RequestCreateGame")
	proto.RegisterType((*LocalMap)(nil), "SC2APIProtocol.LocalMap")
	proto.RegisterType((*ResponseCreateGame)(nil), "SC2APIProtocol.ResponseCreateGame")
	proto.RegisterType((*RequestJoinGame)(nil), "SC2APIProtocol.RequestJoinGame")
	proto.RegisterType((*PortSet)(nil), "SC2APIProtocol.PortSet")
	proto.RegisterType((*ResponseJoinGame)(nil), "SC2APIProtocol.ResponseJoinGame")
	proto.RegisterType((*RequestRestartGame)(nil), "SC2APIProtocol.RequestRestartGame")
	proto.RegisterType((*ResponseRestartGame)(nil), "SC2APIProtocol.ResponseRestartGame")
	proto.RegisterType((*RequestStartReplay)(nil), "SC2APIProtocol.RequestStartReplay")
	proto.RegisterType((*ResponseStartReplay)(nil), "SC2APIProtocol.ResponseStartReplay")
	proto.RegisterType((*RequestLeaveGame)(nil), "SC2APIProtocol.RequestLeaveGame")
	proto.RegisterType((*ResponseLeaveGame)(nil), "SC2APIProtocol.ResponseLeaveGame")
	proto.RegisterType((*RequestQuickSave)(nil), "SC2APIProtocol.RequestQuickSave")
	proto.RegisterType((*ResponseQuickSave)(nil), "SC2APIProtocol.ResponseQuickSave")
	proto.RegisterType((*RequestQuickLoad)(nil), "SC2APIProtocol.RequestQuickLoad")
	proto.RegisterType((*ResponseQuickLoad)(nil), "SC2APIProtocol.ResponseQuickLoad")
	proto.RegisterType((*RequestQuit)(nil), "SC2APIProtocol.RequestQuit")
	proto.RegisterType((*ResponseQuit)(nil), "SC2APIProtocol.ResponseQuit")
	proto.RegisterType((*RequestGameInfo)(nil), "SC2APIProtocol.RequestGameInfo")
	proto.RegisterType((*ResponseGameInfo)(nil), "SC2APIProtocol.ResponseGameInfo")
	proto.RegisterType((*RequestObservation)(nil), "SC2APIProtocol.RequestObservation")
	proto.RegisterType((*ResponseObservation)(nil), "SC2APIProtocol.ResponseObservation")
	proto.RegisterType((*ChatReceived)(nil), "SC2APIProtocol.ChatReceived")
	proto.RegisterType((*RequestAction)(nil), "SC2APIProtocol.RequestAction")
	proto.RegisterType((*ResponseAction)(nil), "SC2APIProtocol.ResponseAction")
	proto.RegisterType((*RequestStep)(nil), "SC2APIProtocol.RequestStep")
	proto.RegisterType((*ResponseStep)(nil), "SC2APIProtocol.ResponseStep")
	proto.RegisterType((*RequestData)(nil), "SC2APIProtocol.RequestData")
	proto.RegisterType((*ResponseData)(nil), "SC2APIProtocol.ResponseData")
	proto.RegisterType((*RequestSaveReplay)(nil), "SC2APIProtocol.RequestSaveReplay")
	proto.RegisterType((*ResponseSaveReplay)(nil), "SC2APIProtocol.ResponseSaveReplay")
	proto.RegisterType((*RequestReplayInfo)(nil), "SC2APIProtocol.RequestReplayInfo")
	proto.RegisterType((*PlayerInfoExtra)(nil), "SC2APIProtocol.PlayerInfoExtra")
	proto.RegisterType((*ResponseReplayInfo)(nil), "SC2APIProtocol.ResponseReplayInfo")
	proto.RegisterType((*RequestAvailableMaps)(nil), "SC2APIProtocol.RequestAvailableMaps")
	proto.RegisterType((*ResponseAvailableMaps)(nil), "SC2APIProtocol.ResponseAvailableMaps")
	proto.RegisterType((*RequestSaveMap)(nil), "SC2APIProtocol.RequestSaveMap")
	proto.RegisterType((*ResponseSaveMap)(nil), "SC2APIProtocol.ResponseSaveMap")
	proto.RegisterType((*RequestPing)(nil), "SC2APIProtocol.RequestPing")
	proto.RegisterType((*ResponsePing)(nil), "SC2APIProtocol.ResponsePing")
	proto.RegisterType((*RequestDebug)(nil), "SC2APIProtocol.RequestDebug")
	proto.RegisterType((*ResponseDebug)(nil), "SC2APIProtocol.ResponseDebug")
	proto.RegisterType((*PlayerSetup)(nil), "SC2APIProtocol.PlayerSetup")
	proto.RegisterType((*SpatialCameraSetup)(nil), "SC2APIProtocol.SpatialCameraSetup")
	proto.RegisterType((*InterfaceOptions)(nil), "SC2APIProtocol.InterfaceOptions")
	proto.RegisterType((*PlayerInfo)(nil), "SC2APIProtocol.PlayerInfo")
	proto.RegisterType((*PlayerCommon)(nil), "SC2APIProtocol.PlayerCommon")
	proto.RegisterType((*Observation)(nil), "SC2APIProtocol.Observation")
	proto.RegisterType((*Action)(nil), "SC2APIProtocol.Action")
	proto.RegisterType((*ActionChat)(nil), "SC2APIProtocol.ActionChat")
	proto.RegisterType((*ActionError)(nil), "SC2APIProtocol.ActionError")
	proto.RegisterType((*PlayerResult)(nil), "SC2APIProtocol.PlayerResult")
	proto.RegisterEnum("SC2APIProtocol.Status", Status_name, Status_value)
	proto.RegisterEnum("SC2APIProtocol.Difficulty", Difficulty_name, Difficulty_value)
	proto.RegisterEnum("SC2APIProtocol.PlayerType", PlayerType_name, PlayerType_value)
	proto.RegisterEnum("SC2APIProtocol.Alert", Alert_name, Alert_value)
	proto.RegisterEnum("SC2APIProtocol.Result", Result_name, Result_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseCreateGame_Error", ResponseCreateGame_Error_name, ResponseCreateGame_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseJoinGame_Error", ResponseJoinGame_Error_name, ResponseJoinGame_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseRestartGame_Error", ResponseRestartGame_Error_name, ResponseRestartGame_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseStartReplay_Error", ResponseStartReplay_Error_name, ResponseStartReplay_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseReplayInfo_Error", ResponseReplayInfo_Error_name, ResponseReplayInfo_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ResponseSaveMap_Error", ResponseSaveMap_Error_name, ResponseSaveMap_Error_value)
	proto.RegisterEnum("SC2APIProtocol.ActionChat_Channel", ActionChat_Channel_name, ActionChat_Channel_value)
}

func init() { proto.RegisterFile("s2clientprotocol/sc2api.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 3518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xcd, 0x73, 0xdc, 0x46,
	0x76, 0xd7, 0x7c, 0xcf, 0xbc, 0x99, 0x21, 0xc1, 0x16, 0x25, 0x8f, 0x28, 0xc9, 0x92, 0x20, 0xdb,
	0x51, 0x94, 0x84, 0x71, 0x58, 0x56, 0x64, 0x49, 0x8e, 0x6d, 0x7e, 0x8a, 0x4c, 0x89, 0x94, 0x02,
	0x9a, 0xf2, 0x21, 0x87, 0xa9, 0x26, 0xd0, 0x24, 0x61, 0x61, 0x00, 0xa8, 0x01, 0x90, 0x66, 0xaa,
	0x72, 0x75, 0x39, 0xa9, 0x9c, 0x52, 0x95, 0xec, 0x65, 0x6b, 0x6b, 0x5d, 0x7b, 0xdc, 0xd3, 0x1e,
	0xf6, 0xb8, 0xbb, 0x7f, 0xc2, 0x1e, 0xfc, 0x1f, 0xec, 0x61, 0x6f, 0xfb, 0x3f, 0x6c, 0xbd, 0xee,
	0xc6, 0xd7, 0x00, 0x18, 0xd2, 0x2e, 0x9f, 0x88, 0x7e, 0x5f, 0xd3, 0x78, 0xef, 0xf5, 0xef, 0xbd,
	0x7e, 0x20, 0xdc, 0x0e, 0x56, 0x4c, 0xc7, 0x66, 0x6e, 0xe8, 0x73, 0x2f, 0xf4, 0x4c, 0xcf, 0xf9,
	0xc7, 0xc0, 0x5c, 0xa1, 0xbe, 0xbd, 0x2c, 0xd6, 0x64, 0x6e, 0x7f, 0x7d, 0x65, 0xf5, 0xd5, 0xce,
	0x2b, 0xc5, 0x5c, 0x2a, 0x8a, 0x9b, 0xde, 0x64, 0xe2, 0xb9, 0x52, 0x7c, 0xe9, 0x66, 0x81, 0x6d,
	0xd1, 0x90, 0x2a, 0xe6, 0xad, 0x22, 0x93, 0x1d, 0x46, 0xc7, 0x95, 0x5c, 0xc6, 0xb9, 0xc7, 0x2b,
	0xb9, 0x6f, 0x23, 0xc6, 0xcf, 0x15, 0x77, 0xa9, 0xc0, 0xe5, 0xf4, 0xac, 0x52, 0x33, 0x30, 0x3d,
	0xce, 0x14, 0xf7, 0xdd, 0x22, 0xd7, 0xa7, 0xa1, 0x4d, 0x1d, 0xc5, 0xbf, 0x51, 0xe0, 0x47, 0xca,
	0x35, 0xfa, 0x37, 0x00, 0x1d, 0x83, 0xbd, 0x8d, 0x58, 0x10, 0x92, 0x0d, 0xe8, 0x9b, 0x9c, 0xd1,
	0x90, 0x8d, 0x8f, 0xe9, 0x84, 0x8d, 0x6a, 0x77, 0x6b, 0x0f, 0xfa, 0x2b, 0xf7, 0x96, 0xf3, 0xce,
	0x5b, 0x56, 0xd2, 0xeb, 0x42, 0xf2, 0x39, 0x9d, 0xb0, 0xed, 0x2b, 0x06, 0x98, 0xc9, 0x8a, 0x7c,
	0x0a, 0xbd, 0xaf, 0x3c, 0xdb, 0x95, 0x36, 0xea, 0xc2, 0xc6, 0x9d, 0x0a, 0x1b, 0xff, 0xea, 0xd9,
	0xae, 0xb2, 0xd0, 0xfd, 0x4a, 0x3d, 0x93, 0xe7, 0x30, 0xe0, 0x2c, 0x08, 0x29, 0x0f, 0xa5, 0x89,
	0x86, 0x30, 0xa1, 0x57, 0x98, 0x30, 0xa4, 0xa8, 0xb2, 0xd2, 0xe7, 0xe9, 0x12, 0x0d, 0x49, 0x33,
	0x9c, 0xf9, 0x0e, 0x3d, 0x1f, 0x35, 0x67, 0x1a, 0xda, 0x47, 0x51, 0x43, 0x48, 0xa2, 0xa1, 0x20,
	0x5d, 0x92, 0x55, 0x00, 0x87, 0xd1, 0x53, 0xe5, 0x96, 0x96, 0x30, 0x73, 0xb7, 0xc2, 0xcc, 0x0b,
	0x14, 0x54, 0xbb, 0xe9, 0x39, 0xf1, 0x02, 0x4d, 0xbc, 0x8d, 0x6c, 0xf3, 0xcd, 0x38, 0xa0, 0xa7,
	0x6c, 0xd4, 0x9e, 0x69, 0xe2, 0xdf, 0x50, 0x70, 0x9f, 0x9e, 0x0a, 0x13, 0x6f, 0xe3, 0x45, 0x6a,
	0xc2, 0xf1, 0xa8, 0x35, 0xea, 0x5c, 0x6c, 0xe2, 0x85, 0x47, 0xad, 0xc4, 0x04, 0x2e, 0xc8, 0x3f,
	0x41, 0xf3, 0x6d, 0x64, 0x87, 0xa3, 0xae, 0x50, 0xbe, 0x59, 0xad, 0x1c, 0x6e, 0x5f, 0x31, 0x84,
	0x28, 0x46, 0x13, 0xdf, 0x7a, 0x6c, 0xbb, 0x47, 0xde, 0xa8, 0x37, 0x33, 0x9a, 0xf8, 0xa2, 0x3b,
	0xee, 0x91, 0x87, 0xd1, 0x3c, 0x56, 0xcf, 0x64, 0x0b, 0xfa, 0xde, 0x61, 0xc0, 0xf8, 0x29, 0x0d,
	0x6d, 0xcf, 0x1d, 0xc1, 0xcc, 0x18, 0xbc, 0x4c, 0x25, 0x31, 0x06, 0x19, 0x45, 0xf2, 0x18, 0xda,
	0xd4, 0x14, 0x26, 0xfa, 0xc2, 0xc4, 0xed, 0x0a, 0x13, 0xab, 0xa6, 0xd2, 0x56, 0xe2, 0xf8, 0xce,
	0x41, 0xc8, 0xfc, 0xd1, 0x60, 0xe6, 0x3b, 0xef, 0x87, 0xcc, 0xc7, 0x77, 0x46, 0x51, 0x54, 0xc1,
	0x03, 0x3f, 0x1a, 0xce, 0x54, 0xd9, 0xa0, 0x21, 0x45, 0x15, 0x14, 0x25, 0x1f, 0x41, 0x4b, 0x1c,
	0xe5, 0xd1, 0x9c, 0xd0, 0xb9, 0x55, 0xe9, 0x5a, 0xc6, 0x31, 0xbd, 0xa4, 0x30, 0x1e, 0x38, 0xcc,
	0x87, 0x38, 0x41, 0xe7, 0x67, 0x1e, 0x38, 0x4c, 0x82, 0x24, 0x3f, 0x21, 0x48, 0x56, 0x68, 0x45,
	0x1a, 0x90, 0x41, 0xd2, 0x66, 0x5a, 0x91, 0x3a, 0x2a, 0x4c, 0xc0, 0x93, 0x15, 0xd9, 0x85, 0x39,
	0x7a, 0x4a, 0x6d, 0x87, 0x1e, 0x3a, 0x6c, 0x3c, 0xa1, 0x7e, 0x30, 0x5a, 0x10, 0x86, 0xde, 0xab,
	0x72, 0x74, 0x2c, 0xbc, 0x4b, 0xfd, 0x60, 0xfb, 0x8a, 0x31, 0xa4, 0x59, 0x02, 0x79, 0x06, 0x5d,
	0xf1, 0x6a, 0x13, 0xea, 0x8f, 0x88, 0x30, 0xf4, 0xee, 0x8c, 0xf7, 0xda, 0xa5, 0xe8, 0xfd, 0x4e,
	0x20, 0x1f, 0x31, 0x00, 0xbe, 0xed, 0x1e, 0x8f, 0xae, 0xce, 0x0c, 0xc0, 0x2b, 0xdb, 0x3d, 0xc6,
	0x00, 0xa0, 0x28, 0x06, 0x40, 0xe0, 0xf0, 0x68, 0x71, 0x66, 0x00, 0x36, 0x50, 0x06, 0x03, 0x20,
	0x84, 0xd7, 0x7a, 0xd0, 0xe1, 0x92, 0xa1, 0xff, 0x09, 0xa0, 0x6b, 0xb0, 0xc0, 0xf7, 0xdc, 0x80,
	0x91, 0xcd, 0x32, 0x24, 0x2c, 0xc9, 0x5a, 0x29, 0x5e, 0x09, 0x85, 0x9f, 0x15, 0xa1, 0xf0, 0x6e,
	0x95, 0x91, 0x52, 0x2c, 0xdc, 0x2e, 0xc5, 0xc2, 0xfb, 0x55, 0x36, 0x66, 0x80, 0xe1, 0x76, 0x29,
	0x18, 0x56, 0x5a, 0x9a, 0x81, 0x86, 0x6b, 0x25, 0x68, 0x78, 0xaf, 0xca, 0x4e, 0x05, 0x1c, 0xae,
	0x95, 0xc0, 0x61, 0xa5, 0x8d, 0x0a, 0x3c, 0x5c, 0x2b, 0xc1, 0xc3, 0xd9, 0x36, 0x8a, 0x80, 0xb8,
	0x92, 0x03, 0xc4, 0x5b, 0x33, 0xb4, 0x53, 0x44, 0xfc, 0xac, 0x88, 0x88, 0x95, 0x41, 0x2d, 0x85,
	0xc4, 0xe7, 0x65, 0x90, 0x58, 0x19, 0x89, 0x19, 0x98, 0xf8, 0xf1, 0x14, 0x26, 0xbe, 0x5b, 0x65,
	0xa3, 0x00, 0x8a, 0x2b, 0x39, 0x50, 0xbc, 0x55, 0x9d, 0x05, 0x19, 0x54, 0x5c, 0xc9, 0xa1, 0x62,
	0xa5, 0x4e, 0x0e, 0x16, 0x1f, 0xe5, 0x61, 0xf1, 0x76, 0xb5, 0x83, 0x73, 0xb8, 0xb8, 0x59, 0x86,
	0x8b, 0x95, 0xc7, 0xaf, 0x12, 0x18, 0x37, 0xcb, 0x80, 0x51, 0xaf, 0x3e, 0x3c, 0x15, 0xc8, 0xb8,
	0x57, 0x81, 0x8c, 0xef, 0x57, 0xba, 0x7b, 0x36, 0x34, 0x7e, 0x52, 0x80, 0xc6, 0x3b, 0xb3, 0x5e,
	0x6d, 0x0a, 0x1b, 0x57, 0x72, 0xd8, 0x58, 0x19, 0x86, 0x1c, 0x38, 0x3e, 0xca, 0x83, 0x63, 0x65,
	0x18, 0xf2, 0xe8, 0x48, 0x16, 0xa1, 0x25, 0xba, 0xd7, 0xd1, 0xe1, 0xdd, 0xc6, 0x83, 0x9e, 0x21,
	0x17, 0x64, 0x19, 0xda, 0x41, 0x48, 0xc3, 0x28, 0x18, 0x99, 0x77, 0x6b, 0x0f, 0xe6, 0x56, 0xae,
	0x4f, 0x5b, 0xdb, 0x17, 0x5c, 0x43, 0x49, 0xad, 0x01, 0x74, 0xb9, 0xb2, 0xaf, 0x7f, 0x57, 0x87,
	0x85, 0x42, 0xff, 0x48, 0x1e, 0x43, 0xcf, 0xf1, 0x4c, 0xea, 0x08, 0x8f, 0x48, 0xac, 0x1d, 0x4d,
	0x1b, 0x7d, 0x81, 0x02, 0xd2, 0x15, 0x5d, 0x47, 0x3d, 0x93, 0x65, 0x20, 0x87, 0x34, 0x0c, 0x1d,
	0xe6, 0xb2, 0x10, 0x95, 0xc7, 0x6e, 0x0c, 0xb4, 0xbd, 0xed, 0x2b, 0x86, 0x96, 0xf0, 0x76, 0xa9,
	0xbf, 0x27, 0x5b, 0xd3, 0x01, 0x46, 0x95, 0xf1, 0x71, 0xc0, 0xc2, 0xc8, 0x1f, 0x35, 0xee, 0x36,
	0xca, 0xea, 0xcb, 0x2b, 0x21, 0xb3, 0x8f, 0x22, 0x46, 0xdf, 0x4f, 0x17, 0xe4, 0x0e, 0xf4, 0x2d,
	0x3b, 0x10, 0x79, 0x70, 0xe4, 0x1d, 0x0b, 0x0c, 0xed, 0x1a, 0xa0, 0x48, 0x5b, 0xde, 0x31, 0x0a,
	0x70, 0xea, 0x5a, 0xde, 0x64, 0x1c, 0x30, 0x66, 0x09, 0x70, 0x1c, 0x1a, 0x20, 0x49, 0xfb, 0x8c,
	0x59, 0x64, 0x09, 0x9d, 0x41, 0x9d, 0xd0, 0x9e, 0x48, 0xd8, 0xeb, 0x1a, 0xc9, 0x7a, 0xad, 0x05,
	0x8d, 0x5d, 0xea, 0xeb, 0x9f, 0x43, 0x37, 0x7e, 0x59, 0x72, 0x03, 0xba, 0xf8, 0x5a, 0x3e, 0x0d,
	0x4f, 0x84, 0x63, 0x7a, 0x46, 0x67, 0x42, 0xfd, 0x57, 0x34, 0x3c, 0x89, 0x59, 0xe2, 0x48, 0x22,
	0xf8, 0x0d, 0x04, 0x0b, 0x4f, 0x9f, 0xfe, 0x9b, 0x3a, 0x90, 0x62, 0x6d, 0x22, 0x9f, 0xc6, 0xe1,
	0xac, 0x89, 0xb8, 0x3d, 0xb8, 0xb8, 0x9c, 0x2d, 0x6f, 0xa2, 0x7c, 0x1c, 0xf8, 0xfb, 0x30, 0x14,
	0x0f, 0x63, 0x8b, 0x85, 0xd4, 0x76, 0x02, 0xe9, 0x68, 0x63, 0x20, 0x88, 0x1b, 0x92, 0xa6, 0xff,
	0xb6, 0x06, 0x2d, 0xa1, 0x45, 0xe6, 0x00, 0x76, 0xed, 0x20, 0xb0, 0xdd, 0xe3, 0x5d, 0xea, 0x6b,
	0x35, 0x42, 0x60, 0x6e, 0xc7, 0x3d, 0xa5, 0x8e, 0x6d, 0xed, 0xca, 0x57, 0xd0, 0xea, 0x79, 0x1a,
	0xee, 0x5d, 0x6b, 0xe4, 0x69, 0x18, 0x36, 0xad, 0x49, 0x16, 0x41, 0x4b, 0x69, 0xdb, 0xd4, 0xb5,
	0x1c, 0xa6, 0xb5, 0xc8, 0x75, 0x20, 0xea, 0x17, 0x32, 0x11, 0xd3, 0xda, 0x48, 0x57, 0xd2, 0x59,
	0x7a, 0x87, 0x2c, 0xc1, 0xf5, 0xdd, 0xc8, 0x09, 0x6d, 0x19, 0xd2, 0x03, 0x37, 0x88, 0x7c, 0xdf,
	0xe3, 0x21, 0xb3, 0xb4, 0xae, 0xfe, 0x7d, 0x1d, 0xe6, 0xa7, 0x6e, 0x25, 0xe4, 0x21, 0x34, 0x39,
	0x35, 0x99, 0xf2, 0xd7, 0x62, 0xc1, 0x5f, 0xd4, 0xc4, 0x92, 0x24, 0x64, 0x30, 0x15, 0x25, 0x34,
	0x33, 0x6b, 0xac, 0x72, 0xcc, 0xb6, 0x84, 0x87, 0x86, 0x98, 0x8a, 0x31, 0x4f, 0x6e, 0x68, 0xc7,
	0x22, 0x4f, 0xa1, 0xe3, 0xf9, 0x88, 0xc5, 0x81, 0x2a, 0xea, 0x85, 0x1a, 0xb2, 0xe3, 0x86, 0x8c,
	0x1f, 0x51, 0x93, 0xbd, 0x94, 0x72, 0x46, 0xac, 0x40, 0x9e, 0xc2, 0x40, 0x58, 0xe3, 0x63, 0xdc,
	0x7e, 0xa0, 0x6a, 0xf9, 0x3b, 0x85, 0x34, 0xf6, 0x78, 0xb8, 0xcf, 0x42, 0xa3, 0x2f, 0x85, 0x71,
	0x29, 0x74, 0xe5, 0x55, 0x50, 0xe9, 0xb6, 0xc4, 0x11, 0xa8, 0xd6, 0x95, 0xc2, 0x52, 0xf7, 0x0e,
	0xf4, 0x83, 0x13, 0xca, 0xf1, 0x0d, 0x3d, 0x1e, 0x8a, 0xfc, 0x6d, 0x19, 0x20, 0x49, 0x28, 0xb1,
	0x36, 0x0f, 0x43, 0x9f, 0xf2, 0xd0, 0x36, 0x6d, 0x5f, 0x54, 0x28, 0x7d, 0x1d, 0x3a, 0xca, 0x12,
	0xb9, 0xa9, 0xca, 0xa6, 0x50, 0xad, 0x09, 0x55, 0x51, 0x12, 0x91, 0x8f, 0xcc, 0x43, 0x1a, 0x28,
	0x66, 0x5d, 0x32, 0x91, 0x80, 0x4c, 0xfd, 0xbb, 0x06, 0x68, 0xd3, 0x5d, 0x12, 0x6a, 0xa4, 0x6e,
	0xae, 0x89, 0x73, 0xd6, 0xf5, 0x63, 0xe7, 0x7e, 0x12, 0x67, 0x7a, 0x5d, 0x44, 0xee, 0x83, 0x8b,
	0x7a, 0xae, 0x0b, 0xf2, 0xbc, 0x51, 0x92, 0xe7, 0xff, 0x53, 0x8f, 0xf3, 0x7c, 0x04, 0x8b, 0x71,
	0x16, 0x66, 0xdf, 0x5d, 0xab, 0x91, 0x9b, 0xf0, 0x8e, 0xca, 0xc3, 0x97, 0x53, 0xe1, 0x97, 0xa9,
	0xaf, 0xd4, 0x54, 0x7c, 0xb5, 0x06, 0xd1, 0x60, 0x10, 0x9b, 0x42, 0x87, 0x6b, 0x4d, 0x32, 0x80,
	0x2e, 0x6e, 0x70, 0x2b, 0x72, 0x1c, 0xad, 0x45, 0xe6, 0xa1, 0xff, 0x82, 0x46, 0xae, 0x79, 0x22,
	0x7e, 0x59, 0x66, 0xfa, 0x16, 0xa3, 0x61, 0xc4, 0x59, 0x36, 0x9b, 0x3b, 0x68, 0x7c, 0xcf, 0xdb,
	0xf7, 0xa9, 0xc9, 0xb6, 0x3c, 0x7e, 0x10, 0x30, 0xae, 0x75, 0xc9, 0x55, 0x98, 0xc7, 0x43, 0xe6,
	0xb1, 0x60, 0xcf, 0x0b, 0x37, 0xbf, 0xb6, 0x83, 0x50, 0xeb, 0x91, 0x05, 0x18, 0xae, 0x53, 0xd7,
	0xf5, 0xc2, 0x97, 0x3e, 0x73, 0xf1, 0x9c, 0x82, 0x20, 0x9d, 0x30, 0xf3, 0x4d, 0x10, 0x4d, 0xe4,
	0xcf, 0xf4, 0x71, 0x5f, 0x7b, 0x2c, 0x3c, 0xf3, 0xf8, 0x1b, 0x49, 0x19, 0xe0, 0xe1, 0x7e, 0x19,
	0x9e, 0x30, 0x2e, 0xd7, 0x43, 0x7d, 0x11, 0x11, 0x67, 0xfa, 0x42, 0xae, 0xff, 0x5f, 0x0d, 0xae,
	0x96, 0xf4, 0xa6, 0xe4, 0xb3, 0x3c, 0x12, 0xfd, 0xed, 0x25, 0xfa, 0xd9, 0x1f, 0x01, 0x45, 0xa3,
	0x38, 0x42, 0x53, 0x6e, 0xab, 0xe9, 0xff, 0x5d, 0x4f, 0xb6, 0x9b, 0x69, 0x74, 0xc9, 0xbd, 0xa4,
	0x5f, 0x48, 0x01, 0x37, 0xed, 0x05, 0x04, 0xea, 0xa6, 0x22, 0x02, 0x78, 0x11, 0xe0, 0x07, 0xa9,
	0x08, 0x22, 0x58, 0x0e, 0x98, 0xdb, 0x39, 0x60, 0x26, 0x7f, 0x5f, 0x09, 0x12, 0xad, 0x9f, 0x18,
	0x22, 0x2e, 0xaa, 0x54, 0x6b, 0x5d, 0x68, 0xcb, 0x3d, 0xeb, 0x3f, 0xaf, 0xa7, 0x41, 0xca, 0x7a,
	0xe3, 0xb2, 0x41, 0xca, 0xe8, 0xfc, 0x88, 0x20, 0xfd, 0x22, 0xa9, 0x17, 0x0b, 0x30, 0x54, 0xc9,
	0x2f, 0x8d, 0x69, 0x35, 0x72, 0x0d, 0x16, 0xd4, 0x01, 0x32, 0x92, 0x10, 0x68, 0xf5, 0x02, 0xb9,
	0xac, 0x70, 0x08, 0x5a, 0x73, 0xd6, 0x11, 0x6c, 0x95, 0x1c, 0xc1, 0xf6, 0x74, 0xae, 0x74, 0x74,
	0x82, 0xe0, 0x93, 0x1f, 0xed, 0xe8, 0x57, 0xb1, 0x8b, 0x99, 0xba, 0xe0, 0x64, 0x04, 0x93, 0x0b,
	0x4b, 0x56, 0x30, 0x25, 0x4e, 0x09, 0xe2, 0x45, 0xa4, 0x20, 0x28, 0x88, 0x43, 0xe8, 0x67, 0x46,
	0x32, 0xfa, 0x1c, 0x0c, 0xb2, 0x17, 0x12, 0x7d, 0x21, 0xa9, 0x58, 0xf1, 0x35, 0x43, 0xff, 0x65,
	0x3d, 0x85, 0xca, 0x98, 0x18, 0x27, 0xa4, 0x1b, 0xdf, 0x64, 0x65, 0x13, 0xb1, 0xa7, 0x50, 0x74,
	0xe2, 0x59, 0x82, 0x15, 0x8c, 0xda, 0xa2, 0xcb, 0xeb, 0x4e, 0x3c, 0x0b, 0x79, 0x01, 0x79, 0x0f,
	0xe6, 0x92, 0xb6, 0x4c, 0x9e, 0x08, 0x15, 0xc0, 0xb8, 0xff, 0x12, 0x27, 0xe2, 0x19, 0xf4, 0xe3,
	0x54, 0xc6, 0x26, 0x5b, 0xb6, 0x54, 0x4b, 0xe5, 0x2d, 0x15, 0x6e, 0xc7, 0x00, 0x3f, 0x79, 0x26,
	0x8f, 0xa0, 0xa7, 0x6e, 0xa5, 0xf4, 0x4c, 0x95, 0xb1, 0x51, 0x49, 0x3b, 0xc9, 0x43, 0x83, 0x9e,
	0x19, 0xdd, 0x40, 0x3d, 0x65, 0x4f, 0x46, 0xeb, 0x07, 0x9e, 0x0c, 0xfd, 0x51, 0x72, 0xf4, 0x33,
	0x37, 0xab, 0xe9, 0xf3, 0x52, 0x9b, 0x3e, 0x2f, 0xfa, 0xef, 0x32, 0xa7, 0x24, 0xab, 0xf8, 0x21,
	0x74, 0xe4, 0x9d, 0x2a, 0x18, 0xd5, 0xc4, 0xab, 0x17, 0xda, 0x61, 0x79, 0xf9, 0x32, 0x62, 0x31,
	0xf2, 0x39, 0x0c, 0xe5, 0xe3, 0x58, 0x1c, 0x04, 0x3c, 0x16, 0xa5, 0x5d, 0xa8, 0xd4, 0x93, 0x27,
	0x6a, 0x40, 0xd3, 0x45, 0x40, 0xfe, 0x25, 0x7f, 0x81, 0x6c, 0x94, 0x4f, 0x49, 0x32, 0xbb, 0xcc,
	0x5f, 0x1b, 0x57, 0x61, 0xa8, 0x22, 0xc6, 0x59, 0x10, 0x39, 0xe1, 0xa8, 0x29, 0x36, 0x70, 0xab,
	0x3c, 0x66, 0x86, 0x90, 0x31, 0x54, 0xe3, 0x2c, 0x57, 0xe4, 0x43, 0x68, 0x9a, 0x27, 0x34, 0x54,
	0xdd, 0x43, 0x41, 0x73, 0xfd, 0x84, 0x86, 0x06, 0x33, 0x99, 0x7d, 0xca, 0x2c, 0x43, 0x48, 0xea,
	0x9b, 0x30, 0xc8, 0x52, 0x8b, 0xf5, 0xbb, 0x95, 0xa9, 0xdf, 0x23, 0xe8, 0x4c, 0x58, 0x10, 0xd0,
	0x63, 0xd5, 0xcc, 0x1b, 0xf1, 0x52, 0x5f, 0x85, 0x61, 0x6e, 0xd0, 0xf7, 0xc3, 0xfd, 0xaf, 0x6f,
	0xc1, 0x5c, 0xfe, 0x5e, 0x4c, 0x3e, 0x42, 0x2c, 0x14, 0x9e, 0x40, 0x13, 0x73, 0xc5, 0xf7, 0x51,
	0x26, 0xa4, 0x27, 0x94, 0xac, 0x7e, 0x3f, 0x39, 0x9d, 0x78, 0x4d, 0xc6, 0xcb, 0x92, 0xe9, 0x45,
	0x6e, 0xa8, 0x9a, 0x11, 0xb9, 0xc8, 0x9e, 0x59, 0x94, 0xd2, 0xbf, 0xa9, 0x25, 0x5a, 0xa2, 0x22,
	0xdc, 0x06, 0xa0, 0x87, 0xb6, 0x63, 0x87, 0xe7, 0xb1, 0x1f, 0xba, 0x46, 0x4f, 0x51, 0x76, 0x2c,
	0x72, 0x17, 0x06, 0x91, 0x6b, 0x87, 0xe3, 0xf0, 0xdc, 0x67, 0x71, 0xa9, 0xe8, 0x1a, 0x80, 0xb4,
	0x2f, 0xce, 0x7d, 0xb6, 0x63, 0xa1, 0x81, 0xc8, 0x3f, 0xe6, 0xd4, 0x12, 0xfc, 0x86, 0x34, 0xa0,
	0x28, 0x3b, 0x16, 0x79, 0x07, 0x3a, 0x87, 0xd1, 0xd1, 0x11, 0xf2, 0x64, 0x0d, 0x68, 0xe3, 0x72,
	0xc7, 0xd2, 0xff, 0x5c, 0x4b, 0x77, 0x26, 0x76, 0xf2, 0x04, 0xd4, 0xef, 0xda, 0x2c, 0x76, 0x65,
	0x31, 0x25, 0xe5, 0xc6, 0x50, 0xde, 0x48, 0xa5, 0xc9, 0x0a, 0xb4, 0x70, 0x47, 0x71, 0x26, 0x17,
	0xdc, 0x77, 0xa0, 0xb6, 0x2b, 0xf4, 0xa4, 0x28, 0x79, 0x0c, 0x5d, 0xb5, 0xcb, 0xa0, 0xea, 0x1a,
	0x76, 0x20, 0xf9, 0x42, 0x2b, 0x11, 0x26, 0xcb, 0xd0, 0xc2, 0x57, 0x08, 0x54, 0xd6, 0x16, 0xe0,
	0x62, 0x2d, 0x3a, 0x3a, 0x92, 0x3f, 0x24, 0xc4, 0x24, 0xb2, 0x4e, 0x0d, 0x50, 0xf5, 0x07, 0xe9,
	0x05, 0x29, 0xa5, 0x12, 0xa2, 0x26, 0x1c, 0x35, 0x51, 0xb5, 0xc5, 0xb3, 0xfe, 0x6d, 0x2d, 0xd1,
	0x4f, 0x07, 0x04, 0x3f, 0xa2, 0x53, 0xa8, 0x97, 0x74, 0x0a, 0xf7, 0x61, 0x68, 0x79, 0x67, 0xae,
	0xe3, 0x51, 0x4b, 0x0a, 0xc9, 0xf0, 0x0d, 0x62, 0x22, 0x0a, 0x65, 0x0a, 0xf5, 0x1f, 0x6b, 0x30,
	0x9f, 0xe2, 0xe8, 0xe6, 0xd7, 0x21, 0xa7, 0xd3, 0xe8, 0x2b, 0x2f, 0xcf, 0x97, 0x45, 0xdf, 0x02,
	0x10, 0xd4, 0xcb, 0x67, 0x0a, 0x33, 0x80, 0xe0, 0x36, 0x28, 0x83, 0xe3, 0xc9, 0x84, 0x8b, 0xfd,
	0xb7, 0x0c, 0x75, 0xb0, 0x77, 0x27, 0x3c, 0xc3, 0xa6, 0xfe, 0x44, 0x64, 0x60, 0xc2, 0x5e, 0xf5,
	0x27, 0xfa, 0xf7, 0xcd, 0x34, 0x0e, 0x19, 0xef, 0xce, 0x28, 0x58, 0x97, 0xab, 0x49, 0x9f, 0x97,
	0xd5, 0xa4, 0x3b, 0xd5, 0x5e, 0x11, 0xbe, 0xcc, 0xb9, 0x66, 0x19, 0xae, 0x8a, 0xdb, 0x8a, 0x15,
	0x71, 0x01, 0x9a, 0x63, 0xc7, 0xf3, 0x7c, 0x79, 0xd3, 0x1a, 0x1a, 0x0b, 0xc8, 0xda, 0x50, 0x9c,
	0x17, 0xc8, 0x20, 0x2b, 0x70, 0x2d, 0x2f, 0x1f, 0x30, 0xd3, 0x73, 0x2d, 0x59, 0x9f, 0xea, 0xc6,
	0xd5, 0xac, 0xc6, 0xbe, 0x64, 0x91, 0x7b, 0x30, 0x10, 0x3a, 0xa7, 0x8c, 0x07, 0x88, 0xe3, 0x6d,
	0xf1, 0x26, 0x7d, 0xa4, 0xbd, 0x96, 0x24, 0x14, 0xc1, 0xc4, 0x48, 0x44, 0xfa, 0x52, 0x04, 0x69,
	0xb1, 0xc8, 0x6d, 0x00, 0x21, 0x72, 0x18, 0xd9, 0x8e, 0x1c, 0x83, 0x0e, 0x8d, 0x1e, 0x52, 0xd6,
	0x90, 0x80, 0x6c, 0x71, 0xb3, 0x92, 0xec, 0xae, 0x64, 0x23, 0x45, 0xb2, 0x93, 0x99, 0x40, 0x6f,
	0xf6, 0x4c, 0x20, 0x8d, 0xce, 0x05, 0x3d, 0x1e, 0x94, 0xf4, 0x78, 0x93, 0x9f, 0xac, 0xc5, 0xd3,
	0x60, 0xf0, 0x8a, 0x72, 0x34, 0x20, 0xdb, 0xb3, 0x26, 0x9a, 0xdc, 0x50, 0xc7, 0x45, 0x92, 0x5a,
	0xfa, 0x75, 0x58, 0x2c, 0xfb, 0x46, 0xa1, 0x7b, 0x70, 0xad, 0x74, 0x42, 0x47, 0x3e, 0x80, 0xf9,
	0x7c, 0x52, 0x49, 0x00, 0xec, 0x19, 0xc3, 0x6c, 0x56, 0x21, 0xf4, 0x5c, 0x2d, 0x8e, 0x9b, 0x24,
	0xea, 0xf5, 0x8c, 0x85, 0xe9, 0x69, 0x93, 0xaa, 0x34, 0xd9, 0x6f, 0x1c, 0x97, 0x9d, 0xe7, 0xd4,
	0xf3, 0xf3, 0x9c, 0x37, 0xd8, 0xe8, 0xe5, 0x06, 0x82, 0xe4, 0x59, 0xbe, 0x39, 0x7f, 0xff, 0x82,
	0x01, 0x62, 0x2e, 0x68, 0xfa, 0xcd, 0x38, 0x1e, 0xc5, 0x8e, 0xb9, 0x96, 0x69, 0x3a, 0x5f, 0xd9,
	0xee, 0xb1, 0xfe, 0xbf, 0x99, 0x3a, 0x81, 0x84, 0x42, 0xd6, 0xd6, 0x2e, 0xce, 0xda, 0xfa, 0x45,
	0x59, 0xdb, 0x98, 0x9d, 0xb5, 0xcd, 0xa9, 0xac, 0xd5, 0xd7, 0x70, 0x4f, 0xe9, 0xf7, 0x1c, 0x2c,
	0x40, 0x72, 0xbe, 0x59, 0x2b, 0x2f, 0x40, 0x42, 0x6a, 0xdd, 0x9b, 0x4c, 0xa8, 0x6b, 0xa9, 0xe1,
	0xa6, 0x3e, 0x8f, 0x9d, 0x44, 0x66, 0xec, 0xa9, 0xff, 0xaa, 0x06, 0xfd, 0xcc, 0xbc, 0x88, 0x2c,
	0x43, 0x13, 0xcb, 0xae, 0xf2, 0x70, 0x05, 0xa6, 0x62, 0x59, 0x33, 0x84, 0x1c, 0x79, 0xa0, 0xa6,
	0x45, 0xf5, 0xea, 0x69, 0x91, 0x9a, 0x15, 0x3d, 0x05, 0xb0, 0xec, 0xa3, 0x23, 0xdb, 0x8c, 0x9c,
	0xf0, 0x5c, 0xbc, 0x7c, 0x89, 0xfd, 0x8d, 0x44, 0xc2, 0xc8, 0x48, 0xeb, 0xbf, 0xae, 0x01, 0xd9,
	0x97, 0x1f, 0xf7, 0xd7, 0xe9, 0x84, 0x71, 0x2a, 0x37, 0xbb, 0x08, 0xad, 0x33, 0xdb, 0x52, 0x59,
	0x55, 0x37, 0xe4, 0x82, 0x3c, 0x06, 0xe0, 0x2c, 0xf0, 0x9c, 0x28, 0x8c, 0xc3, 0x50, 0x32, 0xea,
	0xd9, 0xb7, 0xff, 0x83, 0xad, 0x6c, 0xec, 0x18, 0x19, 0x51, 0xb2, 0x05, 0x64, 0x62, 0xbb, 0x36,
	0x26, 0x64, 0xc6, 0x40, 0x63, 0xb6, 0x81, 0x05, 0xa5, 0x62, 0x24, 0x1a, 0xfa, 0x1f, 0x6a, 0xa0,
	0x4d, 0xb7, 0xe2, 0x44, 0x83, 0x06, 0xb6, 0xfb, 0xb2, 0xd9, 0xc1, 0x47, 0xdc, 0xbd, 0xf8, 0x77,
	0x06, 0xd5, 0xdf, 0xc8, 0x05, 0x79, 0x0e, 0xc3, 0x23, 0x39, 0xdc, 0x18, 0x0b, 0x5f, 0x57, 0xfd,
	0x27, 0x40, 0xd1, 0x1d, 0xc6, 0x40, 0x29, 0xbe, 0x40, 0x3d, 0xf2, 0x14, 0x4b, 0xa8, 0x6b, 0x31,
	0x5e, 0xf5, 0x2f, 0x00, 0x25, 0x16, 0x94, 0x86, 0xfe, 0x5f, 0x75, 0x80, 0xb4, 0x50, 0xcc, 0x1e,
	0x3b, 0xc5, 0x19, 0x53, 0xbf, 0x64, 0xc6, 0x3c, 0x83, 0x39, 0xcc, 0x87, 0xb1, 0xfa, 0x04, 0xc9,
	0x2c, 0x95, 0x0b, 0xe5, 0xb9, 0x33, 0x44, 0x59, 0x23, 0x16, 0x25, 0x8f, 0xa0, 0x2f, 0x94, 0xa9,
	0x19, 0x46, 0xd4, 0x11, 0x6f, 0x56, 0xa5, 0x09, 0x28, 0xb8, 0x2a, 0xe4, 0xa6, 0x72, 0xaf, 0xf5,
	0x83, 0x72, 0xef, 0x2f, 0x75, 0x18, 0xc8, 0x97, 0x58, 0x17, 0xff, 0x2e, 0x33, 0xdb, 0x1b, 0x4b,
	0xd0, 0x9d, 0xd8, 0x2e, 0xe3, 0x54, 0xdd, 0xfc, 0x87, 0x46, 0xb2, 0xc6, 0x06, 0xff, 0x94, 0x05,
	0x3e, 0x73, 0x99, 0x3a, 0xfb, 0xf1, 0x12, 0x61, 0xf0, 0xc8, 0xf3, 0xac, 0xb1, 0x49, 0x7d, 0x75,
	0xee, 0x3b, 0xb8, 0x5e, 0xa7, 0x3e, 0xfe, 0x9a, 0x60, 0x45, 0x41, 0x32, 0x5a, 0x17, 0xb2, 0x07,
	0x81, 0xbc, 0x4f, 0x08, 0x26, 0xe5, 0x93, 0x73, 0x51, 0x49, 0x15, 0x73, 0x95, 0x4f, 0xce, 0x11,
	0x90, 0x04, 0xf3, 0xcc, 0xe3, 0x6f, 0x18, 0x0f, 0x54, 0x95, 0xec, 0x23, 0xed, 0x4b, 0x49, 0x22,
	0x0f, 0x61, 0xc1, 0xb6, 0x1c, 0xa6, 0x44, 0xc6, 0xb2, 0x95, 0x97, 0xe5, 0x72, 0x1e, 0x19, 0x52,
	0x6e, 0x1d, 0xc9, 0xa2, 0x69, 0xe7, 0x93, 0x73, 0x25, 0xd4, 0x93, 0xe8, 0x84, 0x14, 0xc9, 0xfe,
	0x00, 0xe6, 0xcf, 0x28, 0xf7, 0xc7, 0xc7, 0x34, 0x64, 0x4a, 0x06, 0x84, 0xcc, 0x10, 0xc9, 0xcf,
	0x69, 0xc8, 0xa4, 0xdc, 0x1d, 0xe8, 0x3b, 0x94, 0x9f, 0x52, 0x25, 0xd3, 0x97, 0x1f, 0x0b, 0x04,
	0x49, 0x08, 0xe8, 0x3f, 0x6b, 0x42, 0x3f, 0x7b, 0xd7, 0x8c, 0x47, 0xa8, 0xd8, 0x8b, 0xa8, 0x9f,
	0x15, 0x23, 0x54, 0x6c, 0x41, 0x32, 0xcd, 0x9c, 0xfc, 0x5f, 0x26, 0xd5, 0x0b, 0x56, 0x34, 0x73,
	0x32, 0x80, 0x71, 0x33, 0xa7, 0xc2, 0xf9, 0x0f, 0xd0, 0xa6, 0x0e, 0xe3, 0x21, 0x56, 0x71, 0xbc,
	0x07, 0x5d, 0x2b, 0xf4, 0xff, 0xc8, 0x35, 0x94, 0x10, 0xf9, 0x34, 0x7b, 0x63, 0x90, 0x3d, 0x56,
	0xe1, 0x1e, 0x9e, 0x14, 0x5a, 0x75, 0x75, 0xc8, 0x5e, 0x1b, 0xfe, 0x2e, 0x3e, 0xf5, 0xf2, 0x54,
	0x16, 0x7e, 0x6d, 0x1f, 0x99, 0x31, 0x18, 0x3c, 0x81, 0x2e, 0xa7, 0x67, 0xe9, 0xd4, 0xad, 0xe4,
	0x6b, 0x67, 0xf6, 0xc2, 0x4b, 0xcf, 0x8c, 0x0e, 0xa7, 0x67, 0xa2, 0xcd, 0x3e, 0x00, 0x92, 0xc3,
	0x91, 0x74, 0x34, 0xd7, 0x5f, 0xf9, 0x9b, 0x19, 0x46, 0xb6, 0x32, 0x18, 0x62, 0x68, 0x59, 0x44,
	0x11, 0x66, 0xd7, 0xb0, 0xc1, 0x47, 0x8c, 0x48, 0xbf, 0xc1, 0x94, 0x7c, 0x80, 0xce, 0x6e, 0x4a,
	0x48, 0x23, 0xce, 0xe2, 0x5f, 0x61, 0xe3, 0x9f, 0xa1, 0x13, 0xd9, 0x52, 0xbf, 0x5b, 0xfe, 0x69,
	0x2e, 0xa3, 0x7f, 0xb0, 0x63, 0xb4, 0x23, 0x5b, 0x74, 0x04, 0xbf, 0xaf, 0x43, 0x5b, 0x5d, 0x5e,
	0x3f, 0x06, 0x50, 0xe3, 0x84, 0x18, 0x54, 0xfb, 0x2b, 0x37, 0x2a, 0x2e, 0xb0, 0xf4, 0xcc, 0xe8,
	0xd1, 0xf8, 0x91, 0xbc, 0x84, 0x45, 0xa5, 0x99, 0x87, 0xd9, 0x7a, 0xf9, 0x4e, 0xa4, 0x0d, 0x05,
	0x95, 0x06, 0x91, 0xaa, 0x59, 0x1f, 0x91, 0xb5, 0x64, 0xb2, 0xa1, 0xe0, 0xb6, 0x71, 0x19, 0x4b,
	0x6a, 0xb6, 0x21, 0xbd, 0x43, 0x1e, 0x81, 0xda, 0xe1, 0x38, 0xb2, 0xab, 0x26, 0x42, 0x52, 0xff,
	0x60, 0xc7, 0xe8, 0x4a, 0xd1, 0x03, 0x1b, 0xa1, 0x37, 0x33, 0x90, 0x58, 0x2a, 0xd7, 0x10, 0x03,
	0x08, 0x39, 0x8e, 0xf8, 0xb6, 0x06, 0x90, 0x12, 0xc9, 0x27, 0xd0, 0x31, 0x4f, 0xa8, 0xeb, 0x32,
	0x47, 0x95, 0x7b, 0xbd, 0xda, 0xc2, 0xf2, 0xba, 0x94, 0x34, 0x62, 0x95, 0x19, 0xe3, 0x0a, 0x1d,
	0x3a, 0x4a, 0x9a, 0x0c, 0xa1, 0xb7, 0xc6, 0x3d, 0x6a, 0x99, 0x34, 0x08, 0xb5, 0x1a, 0xe9, 0x42,
	0xf3, 0x0b, 0x46, 0x27, 0x5a, 0x5d, 0xff, 0x4f, 0xe8, 0x67, 0x46, 0x3d, 0x08, 0x80, 0xf2, 0xca,
	0x4f, 0xe5, 0x18, 0xaa, 0x69, 0x74, 0xc4, 0x75, 0x9f, 0x1e, 0x4f, 0x0d, 0x0b, 0xea, 0x82, 0x99,
	0x19, 0x16, 0xa4, 0x63, 0x0c, 0x59, 0x46, 0x2e, 0x37, 0xc6, 0xf8, 0xf7, 0x18, 0xd3, 0xd5, 0x8d,
	0xee, 0x82, 0x0a, 0xd7, 0xce, 0x5c, 0x15, 0x4b, 0xbe, 0xfd, 0xe6, 0x8d, 0x3f, 0x34, 0xa1, 0x2d,
	0xbf, 0x06, 0x93, 0x01, 0x74, 0x1d, 0x31, 0x57, 0x65, 0x96, 0x56, 0x43, 0x67, 0xd8, 0xf8, 0x92,
	0x88, 0x5e, 0x5a, 0x9d, 0xf4, 0xa1, 0xa3, 0xfe, 0x4b, 0x46, 0x6b, 0x48, 0x9e, 0xfa, 0xf4, 0xaf,
	0x35, 0x49, 0x0f, 0x5a, 0x98, 0x19, 0x96, 0xd6, 0x42, 0x9f, 0xbd, 0x8d, 0xec, 0x50, 0x6b, 0xa3,
	0x42, 0xe4, 0xbe, 0x71, 0xbd, 0x33, 0x57, 0x33, 0x1f, 0xfe, 0x7f, 0x0d, 0x20, 0xad, 0x58, 0xf8,
	0x4b, 0xaf, 0x19, 0x3f, 0xdf, 0xa4, 0xc1, 0xb9, 0xf4, 0xb3, 0x78, 0xaa, 0x13, 0x80, 0xf6, 0x2e,
	0xb3, 0xec, 0x68, 0xa2, 0x35, 0xc4, 0xb7, 0x49, 0xf1, 0xbc, 0x4d, 0xb9, 0xa5, 0x35, 0x51, 0x4a,
	0x3c, 0xb5, 0x50, 0x0a, 0x9f, 0x18, 0xd7, 0xda, 0xb1, 0x25, 0xc1, 0xe9, 0x90, 0x79, 0xe8, 0xaf,
	0x9f, 0x30, 0x1a, 0xbe, 0xb6, 0xb1, 0x83, 0xd5, 0xba, 0x68, 0x44, 0x10, 0x76, 0x3d, 0x97, 0x9d,
	0x6b, 0xbd, 0x44, 0x60, 0xc7, 0x0d, 0xa8, 0xcb, 0x34, 0x78, 0xf8, 0x24, 0x6e, 0x1d, 0xb0, 0xe6,
	0x23, 0x3b, 0xf9, 0x40, 0xe4, 0x62, 0x0a, 0x0c, 0xa0, 0xbb, 0xee, 0x4d, 0xfc, 0x28, 0x64, 0x5c,
	0xab, 0xe3, 0x4a, 0x8d, 0xa8, 0xb9, 0xd6, 0x78, 0xf8, 0x04, 0x5a, 0x02, 0x6c, 0xc9, 0x0d, 0xb8,
	0xb6, 0x17, 0x99, 0x0e, 0xa3, 0x5c, 0x8e, 0xa5, 0x37, 0x58, 0xc8, 0xcc, 0x50, 0x38, 0xf1, 0x1a,
	0x2c, 0xec, 0x9d, 0x5b, 0x51, 0xf0, 0xa5, 0xc7, 0x27, 0x09, 0xb9, 0xfe, 0xf0, 0x09, 0xb4, 0x55,
	0x28, 0xfb, 0xd0, 0x79, 0x6d, 0x9b, 0xa1, 0xc7, 0xd1, 0x11, 0x00, 0xed, 0x0d, 0x86, 0x07, 0x5d,
	0xab, 0x93, 0x0e, 0x34, 0xbe, 0xb0, 0x95, 0xaf, 0x0f, 0x5c, 0x8b, 0x99, 0x36, 0x3a, 0xb8, 0xf9,
	0xd7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xdd, 0x29, 0x73, 0x47, 0x2b, 0x00, 0x00,
}
